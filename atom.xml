<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[かがわブログ]]></title>
  <link href="http://shuhei.github.com/atom.xml" rel="self"/>
  <link href="http://shuhei.github.com/"/>
  <updated>2012-06-16T21:32:26+09:00</updated>
  <id>http://shuhei.github.com/</id>
  <author>
    <name><![CDATA[Shuhei Kagawa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[3D LUT]]></title>
    <link href="http://shuhei.github.com/blog/2012/06/01/3d-lut/"/>
    <updated>2012-06-01T21:22:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2012/06/01/3d-lut</id>
    <content type="html"><![CDATA[<p>openFrameworks 0071 がリリースされました。今回のリリースの目玉の一つは examples が充実していることです。ディレクトリ構成上も apps から独立して一つ上の階層に上がりました。</p>

<p>フォントのベクター情報いじったり、Instagram のエフェクト再現したりしてて面白い。</p>

<p>エフェクトをかけるのには <a href="http://en.wikipedia.org/wiki/3D_LUT">3D LUT</a> という仕組みが使われているようです。.cube ファイルという、この RGB 値ならこの RGB 値にする、というのを単純に羅列したものでエフェクトを定義しています。このファイル形式は After Effects とかで作れるみたい。
<a href="http://ae-users.com/jp/tips/2010/04/whats-new-after-effects-cs5/">After Effects CS5 ファーストレビュー！CS5では何が変わる？</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[普通のウェブサイト制作に CoffeeScript と SCSS を使ってみて]]></title>
    <link href="http://shuhei.github.com/blog/2012/04/07/coffeescript-and-scss-for-vanilla-website/"/>
    <updated>2012-04-07T13:30:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2012/04/07/coffeescript-and-scss-for-vanilla-website</id>
    <content type="html"><![CDATA[<p>最近バックエンドなしの普通の Web サイトを作るのに、ためしに CoffeeScript と SCSS を使ってみています。Ruby の <a href="https://github.com/mynyml/watchr">watchr</a> を使って、ファイルを更新したら自動でコンパイルするように設定。</p>

<div><script src='https://gist.github.com/2325038.js?file='></script>
<noscript><pre><code>watch('(.*)\.coffee') { |md| system &quot;coffee -o js -c #{md[0]}&quot; }
watch('sass\/(.*)\.s[ac]ss') { |md| system &quot;compass compile #{md[0]}&quot; }</code></pre></noscript></div>


<p>今のところ、SCSS と Compass はとても良いけど、CoffeeScript は jQuery との相性がいまいちという感想。jQuery のメソッドチェーンを書こうとすると、CoffeeScript でも関数実行の括弧が必要で JS とあまり変わらない。jQuery でちょこちょこエフェクトとかをつけるだけだと、あまりメリットがないかも。Backbone.js とかを使ってクラススタイルでごりごり書くのには良さそうなので、今度試してみたいなーと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perfume Dev]]></title>
    <link href="http://shuhei.github.com/blog/2012/04/03/perfume-dev/"/>
    <updated>2012-04-03T14:07:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2012/04/03/perfume-dev</id>
    <content type="html"><![CDATA[<p><a href="http://shuheikagawa.com/perfume_dev/stick_people/"><img src="http://farm8.staticflickr.com/7193/6894949804_fae1a1bc62_c.jpg" width="800" height="461" title="&#34;Perfume Dev&#34;" alt="&#34;Perfume Dev&#34;"></a></p>

<p><a href="http://www.perfume-global.com/">Perfume Global</a> のデータで<a href="http://shuheikagawa.com/perfume_dev/stick_people/">遊んでみました</a>。たぶん Chrome でないと動きません。曲のファイルが重いので、はじまるまでに時間がかかるかも。ソースは <a href="https://github.com/shuhei/perfume_dev">github</a> にあります。</p>

<p>Three.js 使うと WebGL も簡単。床のは Web Audio API で FFT したのを表示してます。Web Audio API はビルトインで FFT できてびっくりしました。HTML5 すごい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Category index for Octopress]]></title>
    <link href="http://shuhei.github.com/blog/2012/04/03/category-index-for-octopress/"/>
    <updated>2012-04-03T09:20:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2012/04/03/category-index-for-octopress</id>
    <content type="html"><![CDATA[<p>サイドバーにカテゴリー一覧を出してみました。</p>

<div><script src='https://gist.github.com/2288181.js?file='></script>
<noscript><pre><code>diff --git a/_config.yml b/_config.yml
index 5c7d335..7ad03bb 100644
--- a/_config.yml
+++ b/_config.yml
@@ -45,7 +45,7 @@ titlecase: true       # Converts page and post titles to titlecase
 
 # list each of the sidebar modules you want to include, in the order you want them to appear.
 # To add custom asides, create files in /source/_includes/custom/asides/ and add them to the list like 'custom/asides/custom_aside_name.html'
-default_asides: [asides/recent_posts.html, asides/github.html, asides/twitter.html, asides/delicious.html, asides/pinboard.html, asides/googleplus.html]
+default_asides: [asides/recent_posts.html, custom/asides/categories.html, asides/github.html, asides/twitter.html, asides/delicious.html, asides/pinboard.
 
 # Each layout uses the default asides, but they can have their own asides instead. Simply uncomment the lines below
 # and add an array with the asides you want to use.
</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use ofxOpenCv on of007]]></title>
    <link href="http://shuhei.github.com/blog/2012/04/03/how-to-use-ofxopencv-on-of007/"/>
    <updated>2012-04-03T00:36:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2012/04/03/how-to-use-ofxopencv-on-of007</id>
    <content type="html"><![CDATA[<p>ofxOpenCv を of007 で使うためのちょっとしたメモです。</p>

<p>1. <code>addons</code> に <code>of/addons/ofxOpenCv</code> をドラッグ。<code>src</code> 以外は参照を消してしまう。</p>

<p>2. Build Settings -> Linking -> Other Linker Flags に以下を設定。</p>

<pre><code>    $(OF_PATH)/addons/ofxOpenCv/libs/opencv/lib/osx/opencv.a
</code></pre>

<p>3. Build Settings -> Search Paths -> Header Search Paths に以下を設定。</p>

<pre><code>    $(OF_PATH)/addons/ofxOpenCv/libs/opencv/include/opencv
    $(OF_PATH)/addons/ofxOpenCv/libs/opencv/include
    $(OF_PATH)/addons/ofxOpenCv/src
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use ofxUI]]></title>
    <link href="http://shuhei.github.com/blog/2012/04/02/how-to-use-ofxui/"/>
    <updated>2012-04-02T20:13:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2012/04/02/how-to-use-ofxui</id>
    <content type="html"><![CDATA[<iframe src="http://player.vimeo.com/video/36385123?color=ffffff" width="800" height="600" frameborder="0" webkitAllowFullScreen allowFullScreen></iframe>


<p><a href="http://vimeo.com/36385123">ofxUI: A User Interface Library for openFrameworks</a> from <a href="http://vimeo.com/rezaali">Reza</a> on <a href="http://vimeo.com">Vimeo</a>.</p>


<p><a href="http://www.syedrezaali.com/blog/?p=2172">ofxUI: A User Interface Addon for OF</a> を使うと openFrameworks に <a href="https://github.com/ofTheo/ofxControlPanel">ofxControlPanel</a> よりもちょっとかっこいい UI を追加することができます。<a href="https://github.com/rezaali/ofxUI">github のページ</a> の Readme を超訳してみました。</p>

<p>1. <a href="https://github.com/rezaali/ofxUI/downloads">ダウンロードページ</a>から ofxUI をダウンロード。中の <code>src</code> を <code>of/addons</code> の中に移して、名前を <code>ofxUI</code> にします。残りは <code>of/apps</code> に移して <code>ofxUIExamples</code> などとします。すると以下のようなファイル構成になります。</p>

<pre><code>    of
    |--- addons
    |    |--- ofxUI
    |         |--- ofxUI.h
    |         |--- ...
    |
    |--- apps
    |    |--- addonExamples
    |    |--- examples
    |    |--- myapps
    |    |--- ofxUIExamples
    |         |--- example-ofxUIAllWidgets
    |         |--- ...
    |--- …
</code></pre>

<p>2. <code>of/apps/examples/emptyExample</code> を <code>of/apps/myapps</code> 以下にコピーして新しいプロジェクトを作ります。</p>

<p>3. 新しく作ったプロジェクトを Xcode で開きます。</p>

<p>4. Xcode の左側の <code>addons</code> のところに Finder から <code>of/addons/ofxUI</code> をドラッグアンドドロップします。</p>

<p>5. &#8220;Choose options for adding these files&#8221; と聞かれたら、何もせず &#8220;finish&#8221; を押します。<code>of/addons/ofxXmlSettings</code> も同様に Xcode の <code>addons</code> フォルダに追加。このアドオンは XML ファイルに設定を保存して読み出すのに使われます。</p>

<p>6. Finder で <code>of/apps/ofxUIExamples/example-ofxUIAllWidgets/bin/data/GUI</code> をコピーし、プロジェクトの <code>bin/data</code> に入れます。</p>

<p>7. アプリのヘッダファイル（testApp.h）で &#8220;ofxUI.h&#8221; を include します。</p>

<p>8. ヘッダに続けて以下の変数と関数を追加。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">ofxUICanvas</span> <span class="o">*</span><span class="n">gui</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">exit</span><span class="p">();</span>
</span><span class='line'><span class="kt">void</span> <span class="n">guiEvent</span><span class="p">(</span><span class="n">ofxUIEventArgs</span> <span class="o">&amp;</span><span class="n">e</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>9. 実装ファイルにメソッドを追加します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">exit</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">guiEvent</span><span class="p">(</span><span class="n">ofxUIEventArgs</span> <span class="o">&amp;</span><span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>10. <code>setup()</code> の中で初期化。引数は GUI の左上の点の座標と幅と高さです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">gui</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ofxUICanvas</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">320</span><span class="p">,</span><span class="mi">320</span><span class="p">);</span>          <span class="c1">//ofxUICanvas(float x, float y, float width, float height)         </span>
</span></code></pre></td></tr></table></div></figure>


<p>11. <code>exit()</code> はアプリの終了前に呼ばれます。ここでは設定の保存と gui オブジェクトの破棄を行います（変数がポインタなので参照先を解放しないとメモリリーク）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">exit</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">gui</span><span class="o">-&gt;</span><span class="n">saveSettings</span><span class="p">(</span><span class="s">&quot;GUI/guiSettings.xml&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">delete</span> <span class="n">gui</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>12. GUI にウィジェット（UI 部品のこと）を追加する。最後から二番目の行は、リスナー／コールバックを追加することで、ウィジェットがユーザに操作されたときに何をすればいいか GUI に教えています。よくわからなくても気にしない。また、最後の行は GUI に XML に保存された設定を読み込んでいます。ファイルがなければ、ウィジェットのデフォルトの値が使用されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">gui</span><span class="o">-&gt;</span><span class="n">addWidgetDown</span><span class="p">(</span><span class="k">new</span> <span class="n">ofxUILabel</span><span class="p">(</span><span class="s">&quot;OFXUI TUTORIAL&quot;</span><span class="p">,</span> <span class="n">OFX_UI_FONT_LARGE</span><span class="p">));</span>
</span><span class='line'><span class="n">gui</span><span class="o">-&gt;</span><span class="n">addWidgetDown</span><span class="p">(</span><span class="k">new</span> <span class="n">ofxUISlider</span><span class="p">(</span><span class="mi">304</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mf">0.0</span><span class="p">,</span><span class="mf">255.0</span><span class="p">,</span><span class="mf">100.0</span><span class="p">,</span><span class="s">&quot;BACKGROUND VALUE&quot;</span><span class="p">));</span>
</span><span class='line'><span class="n">ofAddListener</span><span class="p">(</span><span class="n">gui</span><span class="o">-&gt;</span><span class="n">newGUIEvent</span><span class="p">,</span> <span class="k">this</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">testApp</span><span class="o">::</span><span class="n">guiEvent</span><span class="p">);</span>
</span><span class='line'><span class="n">gui</span><span class="o">-&gt;</span><span class="n">loadSettings</span><span class="p">(</span><span class="s">&quot;GUI/guiSettings.xml&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>13. ユーザが UI を操作したときに呼ばれます。操作されたウィジェットに関する処理を書きましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">guiEvent</span><span class="p">(</span><span class="n">ofxUIEventArgs</span> <span class="o">&amp;</span><span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="o">-&gt;</span><span class="n">getName</span><span class="p">()</span> <span class="o">==</span> <span class="s">&quot;BACKGROUND VALUE&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">ofxUISlider</span> <span class="o">*</span><span class="n">slider</span> <span class="o">=</span> <span class="p">(</span><span class="n">ofxUISlider</span> <span class="o">*</span><span class="p">)</span> <span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ofBackground</span><span class="p">(</span><span class="n">slider</span><span class="o">-&gt;</span><span class="n">getScaledValue</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>14. フルスクリーンモードとウィンドウモードを切り替えるためにトグルを追加します。<code>setup()</code> メソッドの中で他のウィジェットの後に以下を追加。もしこれをもうひとつの <code>addWidgetDown</code> の呼び出しの前に書けば、トグルはスライダーの上に置かれます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">gui</span><span class="o">-&gt;</span><span class="n">addWidgetDown</span><span class="p">(</span><span class="k">new</span> <span class="n">ofxUIToggle</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="kc">false</span><span class="p">,</span> <span class="s">&quot;FULLSCREEN&quot;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>15. &#8220;FULLSCREEN&#8221; トグルウィジェットに対応するため、<code>guiEvent</code> メソッドにもう一つ機能を追加します。結局のところ、こんな風に見えるはず。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">guiEvent</span><span class="p">(</span><span class="n">ofxUIEventArgs</span> <span class="o">&amp;</span><span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="o">-&gt;</span><span class="n">getName</span><span class="p">()</span> <span class="o">==</span> <span class="s">&quot;BACKGROUND VALUE&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">ofxUISlider</span> <span class="o">*</span><span class="n">slider</span> <span class="o">=</span> <span class="p">(</span><span class="n">ofxUISlider</span> <span class="o">*</span><span class="p">)</span> <span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ofBackground</span><span class="p">(</span><span class="n">slider</span><span class="o">-&gt;</span><span class="n">getScaledValue</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="o">-&gt;</span><span class="n">getName</span><span class="p">()</span> <span class="o">==</span> <span class="s">&quot;FULLSCREEN&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">ofxUIToggle</span> <span class="o">*</span><span class="n">toggle</span> <span class="o">=</span> <span class="p">(</span><span class="n">ofxUIToggle</span> <span class="o">*</span><span class="p">)</span> <span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ofSetFullscreen</span><span class="p">(</span><span class="n">toggle</span><span class="o">-&gt;</span><span class="n">getValue</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じで他のウィジェットを置いて操作できるようにすることができます。</p>

<p>サンプルコードを見れば、もっと複雑なウィジェットの使い方をしらべることもできます。ここで紹介したコードもサンプルコードの中に入っているので、わからなくなったら見てみるとよいでしょう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test]]></title>
    <link href="http://shuhei.github.com/blog/2012/04/02/test/"/>
    <updated>2012-04-02T12:35:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2012/04/02/test</id>
    <content type="html"><![CDATA[<p>Hello, World!</p>
]]></content>
  </entry>
  
</feed>
