<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Blog]]></title>
  <link href="http://shuheikagawa.com/atom.xml" rel="self"/>
  <link href="http://shuheikagawa.com/"/>
  <updated>2013-12-09T20:25:39+09:00</updated>
  <id>http://shuheikagawa.com/</id>
  <author>
    <name><![CDATA[Shuhei Kagawa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[最近の社内勉強会での発表（WebSockets テザリング、Backbone.js、JavaScript のテスト）]]></title>
    <link href="http://shuheikagawa.com/blog/2013/10/27/tech-talks/"/>
    <updated>2013-10-27T16:44:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2013/10/27/tech-talks</id>
    <content type="html"><![CDATA[<p>大変ひさびさの更新。ここ一年の間で、会社も変わったりいろいろありました。</p>

<p>最近社内勉強会で発表したスライドを溜め込んでたので、この辺で吐き出しておきます。</p>

<ul>
<li>6/7 <a href="https://speakerdeck.com/shuhei/node-dot-js-plus-websocket-detezaringusitemita">Node.js と WebSockets でテザリング</a></li>
<li>8/16 <a href="http://shuheikagawa.com/talks/20130816_Introduction_to_Backbone/">Backbone.js のはなし</a></li>
<li>10/25 <a href="http://shuheikagawa.com/talks/20131025_Testing_JavaScript/">Testing JavaScript</a></li>
</ul>


<p>どれも JavaScript ネタ。仕事の半分くらいは Ruby を書いているのですが・・・。</p>

<p>一個目のは、外に置いてあるサーバとローカルのクライアント（両方 Node.js）を iPhone の Safari を介して WebSockets でつないでインターネットする、というやつです。Softbank がテザリングを始める前に着手して、ちょこちょこ作ってる間にサービスが始まってしまい、モチベーションが大いに削がれたといういわくつき。</p>

<p>二個名、三個目のはタイトルそのままの内容です。どちらも markdown から HTML+JS のプレゼンを生成しています。コードを載せやすくて良いのですが、字が小さくて見にくいと不評。画像も貼りにくいし、次回からは Keynote で作ろうかなあ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3D LUT]]></title>
    <link href="http://shuheikagawa.com/blog/2012/06/01/3d-lut/"/>
    <updated>2012-06-01T21:22:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2012/06/01/3d-lut</id>
    <content type="html"><![CDATA[<p>openFrameworks 0071 がリリースされました。今回のリリースの目玉の一つは examples が充実していることです。ディレクトリ構成上も apps から独立して一つ上の階層に上がりました。フォントのベクター情報いじったり、Instagram のエフェクト再現したりしてて面白い。</p>

<p>Instagram 風の example を見てみると、エフェクトをかけるのには <a href="http://en.wikipedia.org/wiki/3D_LUT">3D LUT</a> という仕組みが使われているようです。.cube ファイルという、この RGB 値ならこの RGB 値にする、というのを単純に羅列したものでエフェクトを定義しています。このファイル形式は After Effects とかで作れるみたい。
<a href="http://ae-users.com/jp/tips/2010/04/whats-new-after-effects-cs5/">After Effects CS5 ファーストレビュー！CS5では何が変わる？</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[普通のウェブサイト制作に CoffeeScript と SCSS を使ってみて]]></title>
    <link href="http://shuheikagawa.com/blog/2012/04/07/coffeescript-and-scss-for-vanilla-website/"/>
    <updated>2012-04-07T13:30:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2012/04/07/coffeescript-and-scss-for-vanilla-website</id>
    <content type="html"><![CDATA[<p>最近バックエンドなしの普通の Web サイトを作るのに、ためしに CoffeeScript と SCSS を使ってみています。Ruby の <a href="https://github.com/mynyml/watchr">watchr</a> を使って、ファイルを更新したら自動でコンパイルするように設定。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">watch</span><span class="p">(</span><span class="s1">&#39;(.*)\.coffee&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">md</span><span class="o">|</span> <span class="nb">system</span> <span class="s2">&quot;coffee -o js -c </span><span class="si">#{</span><span class="n">md</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">watch</span><span class="p">(</span><span class="s1">&#39;sass\/(.*)\.s[ac]ss&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">md</span><span class="o">|</span> <span class="nb">system</span> <span class="s2">&quot;compass compile </span><span class="si">#{</span><span class="n">md</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>今のところ、SCSS と Compass はとても良いけど、CoffeeScript は jQuery との相性がいまいちという感想。jQuery のメソッドチェーンを書こうとすると、CoffeeScript でも関数実行の括弧が必要で JS とあまり変わらない。jQuery でちょこちょこエフェクトとかをつけるだけだと、あまりメリットがないかも。Backbone.js とかを使ってクラススタイルでごりごり書くのには良さそうなので、今度試してみたいなーと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perfume Dev]]></title>
    <link href="http://shuheikagawa.com/blog/2012/04/03/perfume-dev/"/>
    <updated>2012-04-03T14:07:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2012/04/03/perfume-dev</id>
    <content type="html"><![CDATA[<p><a href="http://shuheikagawa.com/works/perfume_dev/stick_people/"><img src="http://farm8.staticflickr.com/7193/6894949804_fae1a1bc62_c.jpg" width="800" height="461" title="&#34;Perfume Dev&#34;" alt="&#34;Perfume Dev&#34;"></a></p>

<p><a href="http://www.perfume-global.com/">Perfume Global</a> のデータで<a href="http://shuheikagawa.com/works/perfume_dev/stick_people/">遊んでみました</a>。たぶん Chrome でないと動きません。曲のファイルが重いので、はじまるまでに時間がかかるかも。ソースは <a href="https://github.com/shuhei/perfume_dev">github</a> にあります。</p>

<p>Three.js 使うと WebGL も簡単。床のは Web Audio API で FFT したのを表示してます。Web Audio API はビルトインで FFT できてびっくりしました。HTML5 すごい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Category index for Octopress]]></title>
    <link href="http://shuheikagawa.com/blog/2012/04/03/category-index-for-octopress/"/>
    <updated>2012-04-03T09:20:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2012/04/03/category-index-for-octopress</id>
    <content type="html"><![CDATA[<p>サイドバーにカテゴリー一覧を出してみました。</p>

<figure class='code'><figcaption><span>_config.yml </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/_config.yml b/_config.yml</span>
</span><span class='line'><span class="gh">index 5c7d335..7ad03bb 100644</span>
</span><span class='line'><span class="gd">--- a/_config.yml</span>
</span><span class='line'><span class="gi">+++ b/_config.yml</span>
</span><span class='line'><span class="gu">@@ -45,7 +45,7 @@ titlecase: true       # Converts page and post titles to titlecase</span>
</span><span class='line'>
</span><span class='line'> # list each of the sidebar modules you want to include, in the order you want them to appear.
</span><span class='line'> # To add custom asides, create files in /source/_includes/custom/asides/ and add them to the list like &#39;custom/asides/custom_aside_name.html&#39;
</span><span class='line'><span class="gd">-default_asides: [asides/recent_posts.html, asides/github.html, asides/twitter.html, asides/delicious.html, asides/pinboard.html, asides/googleplus.html]</span>
</span><span class='line'><span class="gi">+default_asides: [asides/recent_posts.html, custom/asides/categories.html, asides/github.html, asides/twitter.html, asides/delicious.html, asides/pinboard.</span>
</span><span class='line'>
</span><span class='line'> # Each layout uses the default asides, but they can have their own asides instead. Simply uncomment the lines below
</span><span class='line'> # and add an array with the asides you want to use.
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>source/_includes/custom/asides/categories.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Categories<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>    {% for category in site.categories %}
</span><span class='line'>      <span class="nt">&lt;li&gt;</span>{{ category | category_link }}<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    {% endfor %}
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>2013-10-27 編集: 現在はデフォルトで <code>category_link</code> メソッドが追加されているので、以下の修正は不要です。</p>

<figure class='code'><figcaption><span>plugins/category_generator.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/plugins/category_generator.rb b/plugins/category_generator.rb</span>
</span><span class='line'><span class="gh">index bb5fd32..28bf7e0 100644</span>
</span><span class='line'><span class="gd">--- a/plugins/category_generator.rb</span>
</span><span class='line'><span class="gi">+++ b/plugins/category_generator.rb</span>
</span><span class='line'><span class="gu">@@ -156,6 +156,18 @@ module Jekyll</span>
</span><span class='line'>       end
</span><span class='line'>     end
</span><span class='line'>
</span><span class='line'><span class="gi">+    # Outputs a link of a category.</span>
</span><span class='line'><span class="gi">+    # </span>
</span><span class='line'><span class="gi">+    #  +category+ is an item of site.categories.</span>
</span><span class='line'><span class="gi">+    #</span>
</span><span class='line'><span class="gi">+    # Returns string</span>
</span><span class='line'><span class="gi">+    # </span>
</span><span class='line'><span class="gi">+    def category_link(category)</span>
</span><span class='line'><span class="gi">+      dir = @context.registers[:site].config[&#39;category_dir&#39;]</span>
</span><span class='line'><span class="gi">+      category = category[0]</span>
</span><span class='line'><span class="gi">+      &quot;&lt;a class=&#39;category&#39; href=&#39;/#{dir}/#{category.gsub(/_|\P{Word}/, &#39;-&#39;).gsub(/-{2,}/, &#39;-&#39;).downcase}/&#39;&gt;#{category}&lt;/a&gt;&quot;</span>
</span><span class='line'><span class="gi">+    end</span>
</span><span class='line'><span class="gi">+</span>
</span><span class='line'>     # Outputs the post.date as formatted html, with hooks for CSS styling.
</span><span class='line'>     #
</span><span class='line'>     #  +date+ is the date object to format as HTML.
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://gist.github.com/shuhei/2288181">Add a category index to Octopress</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use ofxOpenCv on of007]]></title>
    <link href="http://shuheikagawa.com/blog/2012/04/03/how-to-use-ofxopencv-on-of007/"/>
    <updated>2012-04-03T00:36:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2012/04/03/how-to-use-ofxopencv-on-of007</id>
    <content type="html"><![CDATA[<p>ofxOpenCv を of007 で使うためのちょっとしたメモです。</p>

<p>1. <code>addons</code> に <code>of/addons/ofxOpenCv</code> をドラッグ。<code>src</code> 以外は参照を消してしまう。</p>

<p>2. Build Settings &ndash;> Linking &ndash;> Other Linker Flags に以下を設定。</p>

<pre><code>    $(OF_PATH)/addons/ofxOpenCv/libs/opencv/lib/osx/opencv.a
</code></pre>

<p>3. Build Settings &ndash;> Search Paths &ndash;> Header Search Paths に以下を設定。</p>

<pre><code>    $(OF_PATH)/addons/ofxOpenCv/libs/opencv/include/opencv
    $(OF_PATH)/addons/ofxOpenCv/libs/opencv/include
    $(OF_PATH)/addons/ofxOpenCv/src
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use ofxUI]]></title>
    <link href="http://shuheikagawa.com/blog/2012/04/02/how-to-use-ofxui/"/>
    <updated>2012-04-02T20:13:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2012/04/02/how-to-use-ofxui</id>
    <content type="html"><![CDATA[<iframe src="http://player.vimeo.com/video/36385123?color=ffffff" width="800" height="600" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<p>
  <a href="http://vimeo.com/36385123">ofxUI: A User Interface Library for openFrameworks</a> from
  <a href="http://vimeo.com/rezaali">Reza</a> on
  <a href="http://vimeo.com">Vimeo</a>.
</p>


<p><a href="http://www.syedrezaali.com/blog/?p=2172">ofxUI: A User Interface Addon for OF</a> を使うと openFrameworks に <a href="https://github.com/ofTheo/ofxControlPanel">ofxControlPanel</a> よりもちょっとかっこいい UI を追加することができます。<a href="https://github.com/rezaali/ofxUI">github のページ</a> の Readme を超訳してみました。</p>

<p>1. <a href="https://github.com/rezaali/ofxUI/downloads">ダウンロードページ</a>から ofxUI をダウンロード。中の <code>src</code> を <code>of/addons</code> の中に移して、名前を <code>ofxUI</code> にします。残りは <code>of/apps</code> に移して <code>ofxUIExamples</code> などとします。すると以下のようなファイル構成になります。</p>

<pre><code>    of
    |--- addons
    |    |--- ofxUI
    |         |--- ofxUI.h
    |         |--- ...
    |
    |--- apps
    |    |--- addonExamples
    |    |--- examples
    |    |--- myapps
    |    |--- ofxUIExamples
    |         |--- example-ofxUIAllWidgets
    |         |--- ...
    |--- …
</code></pre>

<p>2. <code>of/apps/examples/emptyExample</code> を <code>of/apps/myapps</code> 以下にコピーして新しいプロジェクトを作ります。</p>

<p>3. 新しく作ったプロジェクトを Xcode で開きます。</p>

<p>4. Xcode の左側の <code>addons</code> のところに Finder から <code>of/addons/ofxUI</code> をドラッグアンドドロップします。</p>

<p>5. &ldquo;Choose options for adding these files&rdquo; と聞かれたら、何もせず &ldquo;finish&rdquo; を押します。<code>of/addons/ofxXmlSettings</code> も同様に Xcode の <code>addons</code> フォルダに追加。このアドオンは XML ファイルに設定を保存して読み出すのに使われます。</p>

<p>6. Finder で <code>of/apps/ofxUIExamples/example-ofxUIAllWidgets/bin/data/GUI</code> をコピーし、プロジェクトの <code>bin/data</code> に入れます。</p>

<p>7. アプリのヘッダファイル（testApp.h）で &ldquo;ofxUI.h&rdquo; を include します。</p>

<p>8. ヘッダに続けて以下の変数と関数を追加。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">ofxUICanvas</span> <span class="o">*</span><span class="n">gui</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">exit</span><span class="p">();</span>
</span><span class='line'><span class="kt">void</span> <span class="n">guiEvent</span><span class="p">(</span><span class="n">ofxUIEventArgs</span> <span class="o">&amp;</span><span class="n">e</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>9. 実装ファイルにメソッドを追加します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">exit</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">guiEvent</span><span class="p">(</span><span class="n">ofxUIEventArgs</span> <span class="o">&amp;</span><span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>10. <code>setup()</code> の中で初期化。引数は GUI の左上の点の座標と幅と高さです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">gui</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ofxUICanvas</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">320</span><span class="p">,</span><span class="mi">320</span><span class="p">);</span>          <span class="c1">//ofxUICanvas(float x, float y, float width, float height)         </span>
</span></code></pre></td></tr></table></div></figure>


<p>11. <code>exit()</code> はアプリの終了前に呼ばれます。ここでは設定の保存と gui オブジェクトの破棄を行います（変数がポインタなので参照先を解放しないとメモリリーク）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">exit</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">gui</span><span class="o">-&gt;</span><span class="n">saveSettings</span><span class="p">(</span><span class="s">&quot;GUI/guiSettings.xml&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">delete</span> <span class="n">gui</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>12. GUI にウィジェット（UI 部品のこと）を追加する。最後から二番目の行は、リスナー／コールバックを追加することで、ウィジェットがユーザに操作されたときに何をすればいいか GUI に教えています。よくわからなくても気にしない。また、最後の行は GUI に XML に保存された設定を読み込んでいます。ファイルがなければ、ウィジェットのデフォルトの値が使用されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">gui</span><span class="o">-&gt;</span><span class="n">addWidgetDown</span><span class="p">(</span><span class="k">new</span> <span class="n">ofxUILabel</span><span class="p">(</span><span class="s">&quot;OFXUI TUTORIAL&quot;</span><span class="p">,</span> <span class="n">OFX_UI_FONT_LARGE</span><span class="p">));</span>
</span><span class='line'><span class="n">gui</span><span class="o">-&gt;</span><span class="n">addWidgetDown</span><span class="p">(</span><span class="k">new</span> <span class="n">ofxUISlider</span><span class="p">(</span><span class="mi">304</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mf">0.0</span><span class="p">,</span><span class="mf">255.0</span><span class="p">,</span><span class="mf">100.0</span><span class="p">,</span><span class="s">&quot;BACKGROUND VALUE&quot;</span><span class="p">));</span>
</span><span class='line'><span class="n">ofAddListener</span><span class="p">(</span><span class="n">gui</span><span class="o">-&gt;</span><span class="n">newGUIEvent</span><span class="p">,</span> <span class="k">this</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">testApp</span><span class="o">::</span><span class="n">guiEvent</span><span class="p">);</span>
</span><span class='line'><span class="n">gui</span><span class="o">-&gt;</span><span class="n">loadSettings</span><span class="p">(</span><span class="s">&quot;GUI/guiSettings.xml&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>13. ユーザが UI を操作したときに呼ばれます。操作されたウィジェットに関する処理を書きましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">guiEvent</span><span class="p">(</span><span class="n">ofxUIEventArgs</span> <span class="o">&amp;</span><span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="o">-&gt;</span><span class="n">getName</span><span class="p">()</span> <span class="o">==</span> <span class="s">&quot;BACKGROUND VALUE&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">ofxUISlider</span> <span class="o">*</span><span class="n">slider</span> <span class="o">=</span> <span class="p">(</span><span class="n">ofxUISlider</span> <span class="o">*</span><span class="p">)</span> <span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ofBackground</span><span class="p">(</span><span class="n">slider</span><span class="o">-&gt;</span><span class="n">getScaledValue</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>14. フルスクリーンモードとウィンドウモードを切り替えるためにトグルを追加します。<code>setup()</code> メソッドの中で他のウィジェットの後に以下を追加。もしこれをもうひとつの <code>addWidgetDown</code> の呼び出しの前に書けば、トグルはスライダーの上に置かれます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">gui</span><span class="o">-&gt;</span><span class="n">addWidgetDown</span><span class="p">(</span><span class="k">new</span> <span class="n">ofxUIToggle</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="kc">false</span><span class="p">,</span> <span class="s">&quot;FULLSCREEN&quot;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>15. &ldquo;FULLSCREEN&rdquo; トグルウィジェットに対応するため、<code>guiEvent</code> メソッドにもう一つ機能を追加します。結局のところ、こんな風に見えるはず。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">testApp</span><span class="o">::</span><span class="n">guiEvent</span><span class="p">(</span><span class="n">ofxUIEventArgs</span> <span class="o">&amp;</span><span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="o">-&gt;</span><span class="n">getName</span><span class="p">()</span> <span class="o">==</span> <span class="s">&quot;BACKGROUND VALUE&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">ofxUISlider</span> <span class="o">*</span><span class="n">slider</span> <span class="o">=</span> <span class="p">(</span><span class="n">ofxUISlider</span> <span class="o">*</span><span class="p">)</span> <span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ofBackground</span><span class="p">(</span><span class="n">slider</span><span class="o">-&gt;</span><span class="n">getScaledValue</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="o">-&gt;</span><span class="n">getName</span><span class="p">()</span> <span class="o">==</span> <span class="s">&quot;FULLSCREEN&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">ofxUIToggle</span> <span class="o">*</span><span class="n">toggle</span> <span class="o">=</span> <span class="p">(</span><span class="n">ofxUIToggle</span> <span class="o">*</span><span class="p">)</span> <span class="n">e</span><span class="p">.</span><span class="n">widget</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ofSetFullscreen</span><span class="p">(</span><span class="n">toggle</span><span class="o">-&gt;</span><span class="n">getValue</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じで他のウィジェットを置いて操作できるようにすることができます。</p>

<p>サンプルコードを見れば、もっと複雑なウィジェットの使い方をしらべることもできます。ここで紹介したコードもサンプルコードの中に入っているので、わからなくなったら見てみるとよいでしょう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test]]></title>
    <link href="http://shuheikagawa.com/blog/2012/04/02/test/"/>
    <updated>2012-04-02T12:35:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2012/04/02/test</id>
    <content type="html"><![CDATA[<p>Hello, World!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TOEIC 新公式問題集 vol.4 (1)]]></title>
    <link href="http://shuheikagawa.com/blog/2010/07/22/toeic-official-workbook-vol-4-1/"/>
    <updated>2010-07-22T00:16:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/07/22/toeic-official-workbook-vol-4-1</id>
    <content type="html"><![CDATA[<p>初 <span class="caps">TOEIC</span> が今週末に迫ってきたので、練習問題を解いてみました。</p>
<ul>
	<li>Part 1: 9 / 10</li>
	<li>Part 2: 27 / 30</li>
	<li>Part 3: 27 / 30</li>
	<li>Part 4: 25 / 30</li>
	<li>Part 5: 35 / 40</li>
	<li>Part 6: 10 / 12</li>
	<li>Part 7: 47 / 48</li>
</ul>
<p>換算点は 805 &#8211; 925 とのこと。<br />
0 &#8211; 200 を 10 &#8211; 990 に線形に投影すると 892 点。<br />
<a href="http://shuheikagawa.com/blog/2009/05/24/toeic/">前回</a> よりも良くなっているようです。</p>
<p>Part 7 が劇的に改善されています。最近洋書を読むようにしているからでしょう。<br />
弱点はやはりリスニングの Part 2, 3, 4 と、単語・語法の Part 5 です。<br />
前者は問題文先読みの試験テクニックを練習すればもう少し向上する気がします。<br />
Part 5 は費用対効果が少なさそうですが、コツコツやるしかありませんかね。</p>
<p>とりあえず、日曜日まで毎日解いていこうと思います。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Surface]]></title>
    <link href="http://shuheikagawa.com/blog/2010/07/10/surface/"/>
    <updated>2010-07-10T19:03:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/07/10/surface</id>
    <content type="html"><![CDATA[<p><a href="http://www.flickr.com/photos/branchiopoda/4764366632/" title="Surface by shuhei kagawa, on Flickr"><img src="http://farm5.static.flickr.com/4079/4764366632_14665c42ff.jpg" width="500" height="250" alt="Surface"></a><br />
<a href="http://www.flickr.com/photos/branchiopoda/4779669194/" title="surface_3 by shuhei kagawa, on Flickr"><img src="http://farm5.static.flickr.com/4139/4779669194_19ce3b4159.jpg" width="500" height="250" alt="surface_3"></a></p>
<p>しばらく続けてみます。</p>
<ul>
	<li><a href="http://shuheikagawa.com/works/surface/">Surface : Built with Processing</a></li>
	<li><a href="http://shuheikagawa.com/works/surface_3/">Surface_3 : Built with Processing</a></li>
</ul>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Floating Balls]]></title>
    <link href="http://shuheikagawa.com/blog/2010/07/04/floating-balls/"/>
    <updated>2010-07-04T15:44:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/07/04/floating-balls</id>
    <content type="html"><![CDATA[<p><a href="http://www.flickr.com/photos/branchiopoda/4759782068/" title="floating balls 1 by shuhei kagawa, on Flickr"><img src="http://farm5.static.flickr.com/4076/4759782068_589051e708.jpg" width="500" height="250" alt="floating balls 1"></a><br />
<a href="http://www.flickr.com/photos/branchiopoda/4759146593/" title="floating balls 2 by shuhei kagawa, on Flickr"><img src="http://farm5.static.flickr.com/4142/4759146593_2488f16d0e.jpg" width="500" height="250" alt="floating balls 2"></a></p>
<p>最近本を読んでばかりで何も作っていなかったので、Processing をいじってみました。</p>
<ul>
	<li><a href="http://shuheikagawa.com/works/floating_ball_1/">FloatingBall_1 : Built with Processing</a></li>
	<li><a href="http://shuheikagawa.com/works/floating_ball_2/">FloatingBall_2 : Built with Processing</a></li>
</ul>
<p><a href="http://fladdict.net/flash/sketch/Study20100630.html">http://fladdict.net/flash/sketch/Study20100630.html</a> をパクっただけですが・・・。</p>
<p>あと、はじめて <a href="http://processing.org/reference/PVector.html">PVector</a> 使ってみたんですが、自分でベクトル演算書かなくていいので便利ですね。</p>
<p>後のアイデア。</p>
<ul>
	<li>丸じゃなくてほかの形。植物や花が育つとか。</li>
	<li>丸が動画の点描。</li>
	<li>絵や写真の濃度マップによって、丸のバネ定数が変わる。絵が浮かび上がる？</li>
</ul>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM で複数バージョンの Ruby を管理]]></title>
    <link href="http://shuheikagawa.com/blog/2010/06/16/multi-rubies-with-rv/"/>
    <updated>2010-06-16T00:32:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/06/16/multi-rubies-with-rv</id>
    <content type="html"><![CDATA[<p>1.8.7 と 1.9.1 など、複数の Ruby を共存させたい時があると思います。<br />
自分でシンボリックリンクを切り替えて・・・とか考えましたが面倒くさい。<br />
<a href="http://rvm.beginrescueend.com/">Ruby Version Manager</a> という素晴らしいものがあるそうです。</p>
<ul>
	<li><a href="http://rvm.beginrescueend.com/rvm/install/"><span class="caps">RVM</span>: Ruby Version Manager &#8211; Installing <span class="caps">RVM</span></a></li>
	<li><a href="http://d.hatena.ne.jp/mirakui/20100502/1272849327">rvm: 複数のRubyを共存させる最新のやり方 &#8211; 床のトルストイ、ゲイとするとのこと</a></li>
</ul>
<p>を参考にインストール。<br />
公式サイトの方に gem はおすすめできないと書いてあったので下記の方法で。</p>
<pre class="prettyprint">$ bash &lt; &lt;( curl http://rvm.beginrescueend.com/releases/rvm-install-latest )</pre>
<p>した後 .bashrc の最後に以下を記載。</p>
<pre class="prettyprint">$ [[ -s $HOME/.rvm/scripts/rvm ]] &amp;&amp; source $HOME/.rvm/scripts/rvm</pre>
<p>これでターミナルを再起動すれば完了です。</p>
<pre class="prettyprint">$ rvm list known</pre>
<p>とするとインストール可能なバージョンのリストを出力してくれます。<br />
下記で 1.9.1 をインストール。</p>
<pre class="prettyprint">$ rvm install 1.9.1</pre>
<p>irb, gem, rake なども一緒にインストールして管理してくれます。<br />
1.8.7 系もインストール。</p>
<pre class="prettyprint">$ rvm install 1.8.7</pre>
<p>使用する Ruby を変えるには・・・。</p>
<pre class="prettyprint">$ rvm use 1.8.7</pre>
<p>情報を見るには下記。</p>
<pre class="prettyprint">$ rvm info 1.8.7</pre>
<p>1.8.7 は現時点では p174 の模様。最新安定板は p249 のようなので、少し古いのかも。<br />
1.8.7-head とすると head がとれますが、こちらは p294 と安定板ではない様子でした。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress で Out of memory]]></title>
    <link href="http://shuheikagawa.com/blog/2010/06/01/out-of-memory-with-wordpress/"/>
    <updated>2010-06-01T23:40:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/06/01/out-of-memory-with-wordpress</id>
    <content type="html"><![CDATA[<p>このブログは自宅サーバで運用しているのですが、5 月の頭、そして今日とサーバが応答しなくなっています。<br />
再起動するとほぼ治るのですが、wp_options テーブルが少し壊れていたり。<br />
syslog を見ると Out of memory で kernel が apache2 を kill している様子。<br />
運用しているのはほとんど Wordpress だけなので、Wordpress が原因のはず。</p>
<p>積んでるメモリはたった 512MB。<br />
人間様のアクセス数はあまりないのですが、検索エンジンのクローラは人並みに来ています。<br />
おそらく、クローラのアクセスに耐えられなくなるのでしょう。</p>
<p>定期的な再起動、Apache や <span class="caps">PHP</span> の設定、MySQL のクエリキャッシュやメモリ使用量の設定など、対策はいろいろありそうですが、とりあえず今回は楽をして Wordpress のキャッシュプラグイン <a href="http://wordpress.org/extend/plugins/wp-super-cache/">WP Super Cache</a> を入れて様子を見ることにしました。<br />
&#8220;Super&#8221; Cache とはなかなかの名前です。<br />
インストールはとても簡単。</p>
<p>さて、一ヶ月後どうなることやら。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The program being debugged is not being run.]]></title>
    <link href="http://shuheikagawa.com/blog/2010/05/01/the-program-being-debugged-is-not-being-run/"/>
    <updated>2010-05-01T14:41:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/05/01/the-program-being-debugged-is-not-being-run</id>
    <content type="html"><![CDATA[<p>久しぶりに iPhone アプリ開発を始め、実機テストをしようとしてみたところ &#8220;The program being debugged is not being run.&#8221; とのエラー。<br />
そんなの見ればわかります。理由を書いてください。理由を。<br />
アプリのインストール自体はできているのですが、デバッグができないようです。</p>
<p><a href="http://stackoverflow.com/questions/1727169/xcode-fails-to-run-app-on-device-saying-the-program-being-debugged-is-not-being">XCode fails to run app on device, saying the program being debugged is not being run &#8211; Stack Overflow</a> を読んでためしてみました。<br />
オーガナイザで provisioning profile を一旦消して、新しくダウンロードしたやつを入れ直そうというものです。</p>
<p>しかし &#8220;<span class="caps">DEVICES</span>&#8221; =&gt; &#8220;iPhone&#8221; =&gt; &#8220;Provisionning&#8221; のところの &#8220;-&#8221; ボタンで消そうとしてみたものの、何故か消えず。&quot;+&quot; で上書きしようとしても効果なし。</p>
<p>&#8220;<span class="caps">IPHONE</span> <span class="caps">DEVELOMENT</span>&#8221; =&gt; &#8220;Provisioning Profiles&#8221; のところで消して &#8220;<span class="caps">DEVICES</span>&#8221; =&gt; &#8220;iPhone&#8221; =&gt; &#8220;Provisionning&#8221; で入れ直したら上手く動きました。<br />
めでたしめでたし。</p>
<h3>追記</h3>
<p>・・・と思ったら、また同じエラーが出ました。<br />
ソースをいじってコンパイルし直した直後に出るみたい。<br />
その後もう一回試すと、ちゃんと起動しています。<br />
うーん、不思議です・・・。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[今さら Snow Leopard にアップグレード]]></title>
    <link href="http://shuheikagawa.com/blog/2010/04/14/upgrade-to-snow-leopard/"/>
    <updated>2010-04-14T23:57:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/04/14/upgrade-to-snow-leopard</id>
    <content type="html"><![CDATA[<p>Snow Leopard の発売から 1 年以上たっていますが、外見上はあまり変わり映えしないし、面倒なので Leopard のままやってきました。<br />
しかし、iPhone <span class="caps">SDK</span> 4.0 beta は Leopard には入らないというので、ついに観念。<br />
ヨドバシのオンラインストア（Amazon より高いけど送料無料、即日発送、ポイントつく）で注文し、アップグレードしてみました。<br />
以下、それに伴う環境構築も合わせてメモ。</p>
<h3>ファイル整理</h3>
<p>引っ越し前の大掃除ということで、いらないファイルを一掃しました。</p>
<h3>（iTunes の認証を解除しておく）</h3>
<p>iTunes で購入した音楽やアプリは 5 台までのコンピュータで共有できるようです。<br />
認証を解除しておかないと、この台数一つを無駄にすることになります。</p>
<p>これには気がつかず、すっかりやり損ねました！<br />
今のところ 5 台で共有することもなさそうなので構いませんが・・・。</p>
<h3>MacPorts, RubyGems のメモ</h3>
<pre class="prettyprint">$ port installed &gt; ports20100414.txt
$ gem list --local &gt; gems20100414.txt</pre>
<h3>Time Machine でバックアップ</h3>
<p>外付け <span class="caps">HDD</span> を引っ張りだしてきてバックアップ。<br />
Time Machine は初めてだったので、フルバックアップで時間がかかりました。<br />
120 GB くらいで 3 から 4 時間ほど。</p>
<h3>Snow Leopard インストール</h3>
<p>Snow Leopard の <span class="caps">DVD</span> を入れ、ディスクユーティリティでフォーマット。<br />
そしてインストール。</p>
<h3>Time Machine からデータを転送</h3>
<p>インストールのウィザードに身を任せ、Time Machine からデータを転送。<br />
ユーザと設定のみ転送し、&quot;HDD 上のその他のファイル&quot;（みたいなやつ）は転送せず。</p>
<h3>Xcode のインストール</h3>
<p><span class="caps">DVD</span> の &#8220;オプションインストール&#8221; フォルダから Xcode をインストール。</p>
<h3>ソフトウェアアップデート</h3>
<p>言われるがままソフトウェアアップデートをし、再起動。<br />
そしたらまた Java のアップデートがあるとかで、立て続けにソフトウェアアップデート、再起動。</p>
<h3>iPhone <span class="caps">SDK</span> のインストール</h3>
<p>Xcode 3.2.3 + iPhone <span class="caps">SDK</span> 4.0 beta をインストール。</p>
<h3>MacPorts のインストール</h3>
<p>Leopard には最初から入っていたような気がするんですが、Snow Leopard には入っていません。<br />
サイトからダウンロードしてインストール。<br />
パッケージ管理ソフトとして Fink や Homebrew なども少し検討してみましたが、結局使い慣れた MacPorts に。</p>
<h3>Ruby 1.9 のインストール</h3>
<p>これを機に Ruby も 1.9 系統を使うようにしてみます。</p>
<pre class="prettyprint">$ sudo port install ruby19</pre>
<p>このままだとコマンド名が <code>ruby1.9</code> や <code>rake1.9</code> です。<br />
<code>ruby</code> や <code>rake</code> として使いたいので、シンボリックリンクを作成。</p>
<pre class="prettyprint">$ cd /opt/local/bin
$ sudo ln -s erb1.9 erb
$ sudo ln -s gem1.9 gem
$ sudo ln -s irb1.9 irb
$ sudo ln -s rake1.9 rake
$ sudo ln -s rdoc1.9 rdoc
$ sudo ln -s ri1.9 ri
$ sudo ln -s ruby1.9 ruby
$ sudo ln -s testrb1.9 testrb
$ which ruby
/opt/local/bin/ruby</pre>
<p>こんなんでいいんですかね・・・？<br />
.bashrc が <code>export PATH=/opt/local/bin:/opt/local/sbin:$PATH</code> 的な感じになっているのが前提です。</p>
<p>なお、Ruby 1.9 には RubyGems が同梱されているので、別途インストールは不要。</p>
<h3>一旦完了</h3>
<p>とりあえず今日のところはこの辺で一旦完了ということで。<br />
その他の MacPorts のパッケージや RubyGems の gem は、必要に応じてインストールすることにします。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Circle Packing]]></title>
    <link href="http://shuheikagawa.com/blog/2010/03/18/circle-packing/"/>
    <updated>2010-03-18T00:24:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/03/18/circle-packing</id>
    <content type="html"><![CDATA[<p><a href="http://www.flickr.com/photos/branchiopoda/4441104740/" title="circle packing by shuhei kagawa, on Flickr"><img src="http://farm3.static.flickr.com/2799/4441104740_982bb52841_o.png" width="500" height="333" alt="circle packing" /></a></p>
<p><a href="http://shuheikagawa.com/blog/2010/03/18/flash-platform-camp-tokyo/">Flash Platform Camp Tokyo</a> での Mario Klingemann の話にあったやつを Processing で作ってみました。<br />
<a href="http://shuheikagawa.com/works/auto_circles/">AutoCircles : Built with Processing</a></p>
<p>写真の色を取りながら、円を描いていきます。円はある程度より大きくなるか、他の円に接するまで大きくなるというルールです。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flash Platform Camp Tokyo を見てきた]]></title>
    <link href="http://shuheikagawa.com/blog/2010/03/16/flash-platform-camp-tokyo/"/>
    <updated>2010-03-16T23:02:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/03/16/flash-platform-camp-tokyo</id>
    <content type="html"><![CDATA[<p>今日 Flash Platform Camp Tokyo に行ってきました。<br />
Flash CS5、Flash Player 10.1、AIR2.0 の新機能紹介や、Ralph Hauwert, Mario Klingemann, 深津さん、新藤さん、Erik Natzke らのセッション。</p>
<p>（内容まとめ。あとで書く）</p>
<p>最近開発プロセスやアプリケーション設計、プログラミング言語そのものなど、いわば How の方に興味が移っていました。<br />
会社で What を選びにくい状況で、ついついそうなってしまっていたのかもしれません。<br />
しかし、今回のイベントでやはり How より What の方が面白いと再確認。とにかく何かを作ることを忘れないようにしようと思いました。</p>
<p>こういう普段と違う世界を見るのは、自分を遠くから見る良いきっかけになりますね。今後も面白そうなものを見つけて参加していきたいです。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH を安全に]]></title>
    <link href="http://shuheikagawa.com/blog/2010/03/15/secure-ssh/"/>
    <updated>2010-03-15T15:32:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/03/15/secure-ssh</id>
    <content type="html"><![CDATA[<p>自宅サーバの <span class="caps">SSH</span> を外から使えるようにするにあたり、セキュリティ対策を施してみました。</p>
<p>鍵認証のところ以外は <a href="http://www.unixuser.org/~euske/doc/openssh/jman/sshd_config.html" title="5">SSHD_CONFIG</a> 参照。<br />
下記設定をして ufw とルータの設定を変えたら、今のところそれらしく動いてます。</p>
<h3>パスワードではなく鍵認証に</h3>
<p>クライアントで鍵を作って、サーバに公開鍵を置いておきます。クライアントが秘密鍵を持っていないと認証できないように設定。<br />
念のためパスワードもかけておきました。</p>
<p>via <a href="http://www.turbolinux.co.jp/support/document/knowledge/152.html">ssh にてパスワードを使用しないでログインする方法</a></p>
<h3>ポートを変更</h3>
<p>22 番ポートはいろんなところから攻撃されるということなので。</p>
<h3>ログインユーザの制限</h3>
<p>そんなにいろんなユーザ作ってませんが、念のため。</p>
<h3>ルートログインの禁止</h3>
<p>root ログインはユーザ名がばれているため禁止。使わないし。</p>
<h3>試行回数の制限</h3>
<p>鍵認証の場合はあまり関係ないかな？</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git + Redmine]]></title>
    <link href="http://shuheikagawa.com/blog/2010/03/13/redmine-with-git/"/>
    <updated>2010-03-13T13:50:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/03/13/redmine-with-git</id>
    <content type="html"><![CDATA[<p>自宅サーバに入れた Redmine から Git レポジトリを参照できるように設定してみました。</p>
<h3>サーバにリポジトリを作成</h3>
<p>Redmine を置いているサーバに空のリポジトリを作ります。</p>
<pre class="prettyprint">server$ mkdir myapp.git
server$ cd myapp.git
server$ git --bare init</pre>
<h3>リモートリポジトリとして登録</h3>
<p>ローカルのレポジトリにサーバのリポジトリを登録。Push します。</p>
<pre class="prettyprint">local$ git remote add origin ssh://username@example.com/path/to/myapp.git
local$ git push origin master</pre>
<h3>Redmine の設定</h3>
<p>プロジェクトの「設定」 =&gt; 「リポジトリ」で以下のように設定。</p>
<ul>
	<li>バージョン管理システム =&gt; Git</li>
	<li>Path to .git directory =&gt; /path/to/myapp.git</li>
</ul>
<p>以上で終了です。<br />
プロジェクトの「リポジトリ」を確認すると、おお、見えました。<br />
ブラウザで見るとぐちゃぐちゃなのがよくわかります・・・。</p>
<h3>チケットとコミットの連携</h3>
<p>コミットメッセージに Redmine のチケット ID を含めることで、チケットとコミットの関連付けが行えます。<br />
チケット ID 前のキーワードによって、関連付けの仕方を変えることができます。デフォルトでは refs で単純な参照、 fixes で進捗率 100% にするようになっているようです。<br />
管理  =&gt; 設定 =&gt; リポジトリ で確認、設定できます。</p>
<h3>参考 <span class="caps">URL</span></h3>
<ul>
	<li><a href="http://blog.champierre.com/archives/670">せっかちな人のための git 入門 &#8211; git をインストールし、共同で開発できる環境を整えるまで : 僕は発展途上技術者</a></li>
	<li><a href="http://d.hatena.ne.jp/ntaku/20090526/1243327903">RedmineとGitで作るプロジェクト開発環境 &#8211; プログラミングノート</a></li>
</ul>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActiveLdap 調査メモ]]></title>
    <link href="http://shuheikagawa.com/blog/2010/03/06/servey-note-ofactiveldap/"/>
    <updated>2010-03-06T19:56:00+09:00</updated>
    <id>http://shuheikagawa.com/blog/2010/03/06/servey-note-ofactiveldap</id>
    <content type="html"><![CDATA[<p>未検証ですが、以下の記事から調査したことのメモ。</p>
<ul>
	<li><a href="http://jp.rubyist.net/magazine/?0027-ActiveLdap">Rubyist Magazine &#8211; ActiveLdap を使ってみよう（前編）</a></li>
	<li><a href="http://www.clear-code.com/archives/rails-seminar-technical-night">Railsで作るActive Directoryと連携した社内システム</a></li>
</ul>
<h3>Rails と併用可</h3>
<pre class="prettyprint">script/generate scaffold_active_ldap
script/generete model_active_ldap user</pre>
<h3>接続</h3>
<p>接続はプロセス間共有不可。普通にやると、Passenger はだめ。</p>
<h4>対策</h4>
<ul>
	<li>ユーザ毎の接続を持たせない。</li>
	<li>1 リクエストで完結させる。</li>
</ul>
<h3>バックエンド</h3>
<ul>
	<li>Ruby なら Ruby/LDAP（OpenLDAP のバインディング）。</li>
	<li>JRuby なら JNDI。</li>
	<li>PureRuby の Net::<span class="caps">LDAP</span> は、trunk でないと問題。</li>
</ul>]]></content>
  </entry>
  
</feed>
