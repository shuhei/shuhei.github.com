---
data:
  - site
  - fonts
---

{% set css %}
  {% include "css/style.css" %}
{% endset %}

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <link rel="preload" href="{{ fonts.css }}" as="style">
{% for fontFile in fonts.fontFiles %}
    <link rel="preload" href="{{ fontFile }}" as="font" crossorigin="anonymous">
{% endfor %}
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{ title }}</title>
    <link rel="icons" sizes="16x16 32x32 48x48" href="/favicon.ico">
    <link rel="alternate" type="application/rss+xml" title="RSS Feed for shuheikagawa.com" href="/blog/feed/rss.xml">
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-309586-8', 'shuheikagawa.com');
      ga('send', 'pageview');
    </script>
    <style>{{ css | safe }}</style>
    <link rel="stylesheet" href="{{ fonts.css }}">
    <!-- TODO: meta tags -->
  </head>
  <body>
    <div class="container">
      <header class="header">
        <h1 class="header__title">
          <a href="/">{{ site.title }}</a>
        </h1>
        <nav class="header__nav">
          <ul class="menu">
            <li class="menu__item">
              <a href="/about/">About</a>
            </li>
            <li class="menu__item">
              <a href="/blog/archives/">All posts</a>
            </li>
          </ul>
        </nav>
      </header>
      <div class="main">
        {{ content | safe }}
      </div>
      <footer class="footer">
        Â© {{ site.author }}
      </footer>
    </div>
  </body>
</html>
<!--
function meta(attrName, attrValue, content) {
  if (!content) {
    return null;
  }
  const attr = escapeAttr(attrValue);
  return `<meta ${attrName}="${attr}" content="${escapeAttr(content)}">`;
}

function Layout({ site, css, title, image, description, children }) {
  const metaTags = [
    meta("name", "description", description),
    meta("name", "twitter:card", "summary_large_image"),
    meta("name", "twitter:site", "@shuheikagawa"),
    // Open Graph metadata needs `property` instead of `name`.
    meta("property", "og:title", title),
    meta("property", "og:site_name", site.title),
    meta("property", "og:description", description),
    meta("property", "og:image", image)
  ].filter(Boolean);
}
-->
