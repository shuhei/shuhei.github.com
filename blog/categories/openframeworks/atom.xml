<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: openFrameworks | My Octopress Blog]]></title>
  <link href="http://shuhei.github.com/blog/categories/openframeworks/atom.xml" rel="self"/>
  <link href="http://shuhei.github.com/"/>
  <updated>2012-04-02T21:10:29+09:00</updated>
  <id>http://shuhei.github.com/</id>
  <author>
    <name><![CDATA[Shuhei Kagawa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to use ofxUI]]></title>
    <link href="http://shuhei.github.com/blog/2012/04/02/how-to-use-ofxui/"/>
    <updated>2012-04-02T20:13:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2012/04/02/how-to-use-ofxui</id>
    <content type="html"><![CDATA[<p><a href="http://www.syedrezaali.com/blog/?p=2172">ofxUI: A User Interface Addon for OF</a> を使うと openFrameworks に <a href="https://github.com/ofTheo/ofxControlPanel">ofxControlPanel</a> よりもちょっとかっこいい UI を追加することができます。<a href="https://github.com/rezaali/ofxUI">github のページ</a> の Readme を超訳してみました。</p>

<p>1. ofxUI をダウンロード。中の src を of/addons の中に移して、名前を ofxUI にします。残りは of/apps に移して ofxUIExamples などとします。すると以下のようなファイル構成になります。</p>

<pre><code>    of
    |--- addons
    |    |--- ofxUI
    |         |--- ofxUI.h
    |         |--- ...
    |
    |--- apps
    |    |--- addonExamples
    |    |--- examples
    |    |--- myapps
    |    |--- ofxUIExamples
    |         |--- example-ofxUIAllWidgets
    |         |--- ...
    |--- …
</code></pre>

<p>2. of/apps/examples/emptyExample を of/apps/myapps 以下にコピーして新しいプロジェクトを作ります。</p>

<p>3. 新しく作ったプロジェクトを Xcode で開きます。</p>

<p>4. Xcode の左側の addons のところに Finder から of/addons/ofxUI をドラッグアンドドロップします。</p>

<p>5. "Choose options for adding these files" と聞かれたら、何もせず "finish" を押します。of/addons/ofxXmlSettings も同様に Xcode の addons フォルダに追加。このアドオンは XML ファイルに設定を保存して読み出すのに使われます。</p>

<p>6. Finder で of/apps/ofxUIExamples/example-ofxUIAllWidgets/bin/data/GUI をコピーし、プロジェクトの bin/data に入れます。</p>

<p>7. アプリのヘッダファイル（testApp.h）で "ofxUI.h" を include します。</p>

<p>8. ヘッダに続けて以下の変数と関数を追加。</p>

<p>```cpp
ofxUICanvas *gui;</p>

<p>void exit();
void guiEvent(ofxUIEventArgs &amp;e);
```</p>

<p>9. 実装ファイルにメソッドを追加します。</p>

<p>```cpp
void testApp::exit()
{</p>

<p>}</p>

<p>void testApp::guiEvent(ofxUIEventArgs &amp;e)
{</p>

<p>}
```</p>

<p>10. setup() の中で初期化。引数は GUI の左上の点の座標と幅と高さです。</p>

<p><code>cpp
gui = new ofxUICanvas(0,0,320,320);          //ofxUICanvas(float x, float y, float width, float height)         
</code></p>

<p>11. exit はアプリの終了前に呼ばれます。ここでは設定の保存と gui オブジェクトの破棄を行います（変数がポインタなので参照先を解放しないとメモリリーク）。</p>

<p><code>cpp
void testApp::exit()
{
  gui-&gt;saveSettings("GUI/guiSettings.xml");    
  delete gui;
}
</code></p>

<p>12. GUI にウィジェット（UI 部品のこと）を追加する。最後から二番目の行は、リスナー／コールバックを追加することで、ウィジェットがユーザに操作されたときに何をすればいいか GUI に教えています。よくわからなくても気にしない。また、最後の行は GUI に XML に保存された設定を読み込んでいます。ファイルがなければ、ウィジェットのデフォルトの値が使用されます。</p>

<p><code>cpp
gui-&gt;addWidgetDown(new ofxUILabel("OFXUI TUTORIAL", OFX_UI_FONT_LARGE));
gui-&gt;addWidgetDown(new ofxUISlider(304,16,0.0,255.0,100.0,"BACKGROUND VALUE"));
ofAddListener(gui-&gt;newGUIEvent, this, &amp;testApp::guiEvent);
gui-&gt;loadSettings("GUI/guiSettings.xml");
</code></p>

<p>13. ユーザが UI を操作したときに呼ばれます。操作されたウィジェットに関する処理を書きましょう。</p>

<p>```cpp
void testApp::guiEvent(ofxUIEventArgs &amp;e)
{</p>

<pre><code>if(e.widget-&gt;getName() == "BACKGROUND VALUE")    
{
    ofxUISlider *slider = (ofxUISlider *) e.widget;   
    ofBackground(slider-&gt;getScaledValue());
}  
</code></pre>

<p>}
```</p>

<p>14. フルスクリーンモードとウィンドウモードを切り替えるためにトグルを追加します。setup メソッドの中で他のウィジェットの後に以下を追加。もしこれをもうひとつの addWidgetDown の呼び出しの前に書けば、トグルはスライダーの上に置かれます。</p>

<p><code>cpp
gui-&gt;addWidgetDown(new ofxUIToggle(32, 32, false, "FULLSCREEN"));
</code></p>

<p>15. "FULLSCREEN" トグルウィジェットに対応するため、guiEvent メソッドにもう一つ機能を追加します。結局のところ、こんな風に見えるはず。</p>

<p>```cpp
void testApp::guiEvent(ofxUIEventArgs &amp;e)
{</p>

<pre><code>if(e.widget-&gt;getName() == "BACKGROUND VALUE")
{
    ofxUISlider *slider = (ofxUISlider *) e.widget;   
    ofBackground(slider-&gt;getScaledValue());
}
else if(e.widget-&gt;getName() == "FULLSCREEN")
{
    ofxUIToggle *toggle = (ofxUIToggle *) e.widget;
    ofSetFullscreen(toggle-&gt;getValue());
}   
</code></pre>

<p>}
```</p>

<p>こんな感じで他のウィジェットを置いて操作できるようにすることができます。</p>

<p>サンプルコードを見れば、もっと複雑なウィジェットの使い方をしらべることもできます。ここで紹介したコードもサンプルコードの中に入っているので、わからなくなったら見てみとよいでしょう。</p>
]]></content>
  </entry>
  
</feed>
