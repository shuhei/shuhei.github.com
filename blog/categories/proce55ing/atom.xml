<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Proce55ing | Blog]]></title>
  <link href="http://shuhei.github.com/blog/categories/proce55ing/atom.xml" rel="self"/>
  <link href="http://shuhei.github.com/"/>
  <updated>2013-10-27T15:15:20+09:00</updated>
  <id>http://shuhei.github.com/</id>
  <author>
    <name><![CDATA[Shuhei Kagawa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chat Network]]></title>
    <link href="http://shuhei.github.com/blog/2009/02/11/chat-networ/"/>
    <updated>2009-02-11T12:38:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2009/02/11/chat-networ</id>
    <content type="html"><![CDATA[<p>前回に引き続き、Processing。
某チャットルームの人間関係を視覚化してみました。</p>

<p><a href="http://shuhei.github.com/works/chart_network/">ChatNetwork</a></p>

<p>丸の大きさが発言回数、線の太さが発言の隣接回数を表しています。
同じくらいの発言回数の相手とでも、人によって隣接回数が異なるのがわかるかと思います。</p>

<p>今後の展望としては、片想い、両想いで線の色を変えると面白いかもしれません。
あとは、元データをDBからリアルタイムで取ってくるとか。</p>

<p>例によってスケッチなのでソースコードはグチャグチャです。
個人的には Processing が日本語が表示できるようになっていたことに驚きました。
beta がとれただけのことはあります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ポインポイン]]></title>
    <link href="http://shuhei.github.com/blog/2009/02/06/poingpoing/"/>
    <updated>2009-02-06T01:06:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2009/02/06/poingpoing</id>
    <content type="html"><![CDATA[<p>久しぶりに Processing いじってみました。
とても簡単で楽しいです。
<a href="http://shuhei.github.com/works/Web/">Web</a></p>

<p>何か作るときのプロトタイプは Processing で作ることにしますかね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Proce55ing から 動画を作る]]></title>
    <link href="http://shuhei.github.com/blog/2008/12/07/make-movie-from-proce55ing/"/>
    <updated>2008-12-07T03:09:00+09:00</updated>
    <id>http://shuhei.github.com/blog/2008/12/07/make-movie-from-proce55ing</id>
    <content type="html"><![CDATA[<p>Proce55ing で作った Sketch を動画にする方法です。
やり方は簡単。</p>

<p>まず、Proce55ing から連番の静止画を書き出します。
draw メソッドの中で、saveFrame() を呼び出せば OK。
これで、フレームごとに screen-XXXX.tif という画像が書き出されます。</p>

<p>そして、ffmpeg で連番の静止画から動画を作成します。
コマンドプロンプトで下記のようにすると、30 fps で mpeg ファイルが書き出されます。
ちなみに、%04d の部分は「数字が 4 つ」の意味です。</p>

<p>pre(prettyprint). ffmpeg -r 30 -i &ldquo;screen-%04d.tif&rdquo; -vcodec mjpeg -sameq test.avi</p>

<p>簡単ですね。</p>
]]></content>
  </entry>
  
</feed>
