{"site":{"title":"Shuhei Kagawa","author":"Shuhei Kagawa","perPage":3,"newPageExtension":"markdown","blogDir":"blog","sourceDir":"source","layoutDir":"_layouts","postDir":"_posts"},"post":{"layout":"post","title":"How to export CommonJS and ES Module","date":"2017-01-05 22:11","comments":true,"categories":["JavaScript"],"url":"/blog/2017/01/05/how-to-export-commonjs-and-es-module/","content":"<p>After <a href=\"/blog/2017/01/05/main-jsnext-main-and-module/\">my previous post about jsnext:main and module</a>, there came another issue.</p>\n<ul>\n<li><a href=\"https://github.com/shuhei/material-colors/issues/16\">colors.es2015.js and colors.js have different APIs · Issue #16 · shuhei/material-colors</a>.</li>\n</ul>\n<p>Here is the twists and turns that I wandered to solve the problem.</p>\n<h2 id=\"exports\">Exports</h2>\n<p>The code of <code>material-colors</code> looked like the following.</p>\n<p><code>colors.js</code> specified in <code>main</code> (CommonJS version)</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">red</span>: { <span class=\"hljs-comment\">/* ... */</span> },\n  <span class=\"hljs-attr\">blue</span>: { <span class=\"hljs-comment\">/* ... */</span> }\n};</code></pre><p><code>colors.es2015.js</code> specified in <code>jsnext:main/module</code> (ES Module version)</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">var</span> red = { <span class=\"hljs-comment\">/* ... */</span> };\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">var</span> blue = { <span class=\"hljs-comment\">/* ... */</span> };</code></pre><p>Then the ES Module file can get benefit of tree shaking if it&#39;s imported by named imports.</p>\n<h2 id=\"problem-of-having-only-named-exports\">Problem of having only named exports</h2>\n<p>The <code>colors.es2015.js</code> broke <code>react-color</code> when built with Webpack 2 because it was doing default import but <code>colors.es2015.js</code> didn&#39;t have default export.</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> material <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'material-colors'</span>;\n<span class=\"hljs-built_in\">console</span>.log(material.red);</code></pre><p>So <a href=\"https://github.com/echenley\">@echenley</a> suggested to change it to a wildcard import.</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> material <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'material-colors'</span>;\n<span class=\"hljs-built_in\">console</span>.log(material.red);</code></pre><p>It worked well, but I removed <code>jsnext:main</code> and <code>module</code> because other libraries with default import may break on Webpack 2 and <code>material-colors</code> is already tiny without tree shaking anyway.</p>\n<h2 id=\"have-a-default-export\">Have a default export</h2>\n<p>After a while, I came up with a better solution to have a default export in addition to named exports. Then it will work well with tree shaking and won&#39;t break default import. Pretty obvious after coming up.</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">var</span> red = { <span class=\"hljs-comment\">/* ... */</span> };\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">var</span> blue = { <span class=\"hljs-comment\">/* ... */</span> };\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">red</span>: red,\n  <span class=\"hljs-attr\">blue</span>: blue\n};</code></pre><h2 id=\"so-\">So?</h2>\n<p>To keep maximum compatibility for CommonJS and ES Module:</p>\n<ul>\n<li>If your CommonJS module exports only one thing, like encouraged in the npm world, export it as a default export.</li>\n<li>If your CommonJS module exports multiple things, which essentially exports an object with them as properties, export named exports. In addition to it, it&#39;s safer to have a default export just in case for the problem described above.</li>\n</ul>\n"}}