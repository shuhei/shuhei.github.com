{"site":{"title":"Shuhei Kagawa","author":"Shuhei Kagawa","perPage":3,"newPageExtension":"markdown","blogDir":"blog","sourceDir":"source","layoutDir":"_layouts","postDir":"_posts","cssFiles":["node_modules/highlight.js/styles/monokai-sublime.css","source/_css/style.css"]},"post":{"layout":"post","title":"rails.vim","published":true,"date":"2010-03-01 08:40","comments":true,"tags":null,"categories":[],"url":"/blog/2010/03/01/rails-vim/","content":"<p><a href=\"http://www.vim.org/scripts/script.php?script_id=1567\">rails.vim &#8211; Ruby on Rails: easy file navigation, enhanced syntax highlighting, and more : vim online</a> がステキ。<br />\nダウンロードして、.vim に入れればインストール完了。</p>\n<h3>ファイル間の移動</h3>\n<p>対応するモデルと単体テスト、コントローラとビューと機能テストの間などを行き来できます。</p>\n<ul>\n\t<li>:Rmodel</li>\n\t<li>:Runittest</li>\n\t<li>:Rcontroller</li>\n\t<li>:Rview</li>\n\t<li>:Rfunctinaltest</li>\n</ul>\n<p>などなど。対応するファイルに飛ぶだけでなく、以下のような感じでパスの指定もできます。</p>\n<p>:Rmodel user<br />\n:Rview users/show</p>\n<p>Tabキーで補完が効くので、大変便利。</p>\n<h3>サーバの起動</h3>\n<p><code>:Rserver</code> とするとコマンドプロンプトが別に開き、サーバが起動されます。</p>\n<h3>Rake の実行</h3>\n<p><code>:Rake task_name</code> で Rake タスクが実行できます。<br />\n例えば単体テストの実行には <code>:Rake test:units</code> 。</p>\n<p>結果はエラーとして出力されるため <code>:cl</code> で確認可能。</p>\n<p>タスク名の補完もきくので、ターミナルより便利！</p>\n<h3>参考<span class=\"caps\">URL</span></h3>\n<ul>\n\t<li><a href=\"http://d.hatena.ne.jp/secondlife/20061222/1166781841\">rails.vim まとめ &#8211; 川o・-・）＜2nd life</a></li>\n\t<li><a href=\"http://d.hatena.ne.jp/mig50/20060731/1154356587\">rails.vimの使い方(導入編) &#8211; migration!!</a></li>\n</ul>"}}