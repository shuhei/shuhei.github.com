{"site":{"title":"Shuhei Kagawa","author":"Shuhei Kagawa","perPage":3,"newPageExtension":"markdown","blogDir":"blog","sourceDir":"source","layoutDir":"_layouts","postDir":"_posts","cssFiles":["node_modules/highlight.js/styles/monokai-sublime.css","source/_css/style.css"]},"posts":[{"layout":"post","title":"Git + Redmine","published":true,"date":"2010-03-13 13:50","comments":true,"tags":null,"categories":[],"url":"/blog/2010/03/13/redmine-with-git/","content":"<p>自宅サーバに入れた Redmine から Git レポジトリを参照できるように設定してみました。</p>\n<h3>サーバにリポジトリを作成</h3>\n<p>Redmine を置いているサーバに空のリポジトリを作ります。</p>\n<pre class=\"prettyprint\">server$ mkdir myapp.git\nserver$ cd myapp.git\nserver$ git --bare init</pre>\n<h3>リモートリポジトリとして登録</h3>\n<p>ローカルのレポジトリにサーバのリポジトリを登録。Push します。</p>\n<pre class=\"prettyprint\">local$ git remote add origin ssh://username@example.com/path/to/myapp.git\nlocal$ git push origin master</pre>\n<h3>Redmine の設定</h3>\n<p>プロジェクトの「設定」 =&gt; 「リポジトリ」で以下のように設定。</p>\n<ul>\n\t<li>バージョン管理システム =&gt; Git</li>\n\t<li>Path to .git directory =&gt; /path/to/myapp.git</li>\n</ul>\n<p>以上で終了です。<br />\nプロジェクトの「リポジトリ」を確認すると、おお、見えました。<br />\nブラウザで見るとぐちゃぐちゃなのがよくわかります・・・。</p>\n<h3>チケットとコミットの連携</h3>\n<p>コミットメッセージに Redmine のチケット ID を含めることで、チケットとコミットの関連付けが行えます。<br />\nチケット ID 前のキーワードによって、関連付けの仕方を変えることができます。デフォルトでは refs で単純な参照、 fixes で進捗率 100% にするようになっているようです。<br />\n管理  =&gt; 設定 =&gt; リポジトリ で確認、設定できます。</p>\n<h3>参考 <span class=\"caps\">URL</span></h3>\n<ul>\n\t<li><a href=\"http://blog.champierre.com/archives/670\">せっかちな人のための git 入門 &#8211; git をインストールし、共同で開発できる環境を整えるまで : 僕は発展途上技術者</a></li>\n\t<li><a href=\"http://d.hatena.ne.jp/ntaku/20090526/1243327903\">RedmineとGitで作るプロジェクト開発環境 &#8211; プログラミングノート</a></li>\n</ul>"},{"layout":"post","title":"ActiveLdap 調査メモ","published":true,"date":"2010-03-06 19:56","comments":true,"tags":null,"categories":[],"url":"/blog/2010/03/06/servey-note-ofactiveldap/","content":"<p>未検証ですが、以下の記事から調査したことのメモ。</p>\n<ul>\n\t<li><a href=\"http://jp.rubyist.net/magazine/?0027-ActiveLdap\">Rubyist Magazine &#8211; ActiveLdap を使ってみよう（前編）</a></li>\n\t<li><a href=\"http://www.clear-code.com/archives/rails-seminar-technical-night\">Railsで作るActive Directoryと連携した社内システム</a></li>\n</ul>\n<h3>Rails と併用可</h3>\n<pre class=\"prettyprint\">script/generate scaffold_active_ldap\nscript/generete model_active_ldap user</pre>\n<h3>接続</h3>\n<p>接続はプロセス間共有不可。普通にやると、Passenger はだめ。</p>\n<h4>対策</h4>\n<ul>\n\t<li>ユーザ毎の接続を持たせない。</li>\n\t<li>1 リクエストで完結させる。</li>\n</ul>\n<h3>バックエンド</h3>\n<ul>\n\t<li>Ruby なら Ruby/<span class=\"caps\">LDAP</span>（OpenLDAP のバインディング）。</li>\n\t<li>JRuby なら <span class=\"caps\">JNDI</span>。</li>\n\t<li>PureRuby の Net::LDAP は、trunk でないと問題。</li>\n</ul>"},{"layout":"post","title":"Ruby の環境を新しく","published":true,"date":"2010-03-06 19:54","comments":true,"tags":null,"categories":null,"url":"/blog/2010/03/06/renew-ruby-environment/","content":"<p>家の Macbook と Ubuntu で Ruby 周りのバージョンを揃えた時のメモ。<br />\n以下の環境に揃えました。</p>\n<ul>\n\t<li>Ruby 1.8.7</li>\n\t<li>Ruby Gems 1.3.5（Macbook は1.3.4）</li>\n\t<li>Rails 2.3.5</li>\n</ul>\n<h3>Ubuntu Server 9.10 64 bit</h3>\n<p>Ruby はもともと 1.8.7。RubyGems も 1.3.5。<br />\n入っている Rails のバージョンを上げる。Aptitude で入れると古いので、RubyGems を使う事に。</p>\n<pre class=\"prettyprint\">sudo aptitude remove rails\nsudo gem install rails\nsudo gem install sqlite3-ruby\n\nvi ~/.bashrc\nexport PATH=/var/lib/gem/1.8/bin:$PATH</pre>\n<h3>Mac OS X</h3>\n<p>もともと入っている Ruby が 1.8.6 なので、1.8.7 を入れます。</p>\n<pre class=\"prettyprint\">sudo port install ruby</pre>\n<p>RubyGems も MacPorts から。1.3.4 なのは我慢。</p>\n<pre class=\"prettyprint\">sudo port install rb-rubygems</pre>"}],"prevPage":"/blog/pages/15/","title":"Page 16 - Shuhei Kagawa","nextPage":"/blog/pages/17/"}