{"site":{"title":"Shuhei Kagawa","author":"Shuhei Kagawa","perPage":3,"newPageExtension":"markdown","blogDir":"blog","sourceDir":"source","layoutDir":"_layouts","postDir":"_posts"},"posts":[{"layout":"post","title":"gem で cairo をインストール","published":true,"date":"2009-10-12 16:13","comments":true,"tags":null,"categories":[],"url":"/blog/2009/10/12/install-cairo-with-gem/","content":"<pre class=\"prettyprint\">sudo gem install cairo</pre>\n<p>でインストールできず、四苦八苦。<br />\n調べてみたところ、下記 <span class=\"caps\">URL</span> に行き当たりました。<br />\nよくわかりませんが、extconf.rb 内に記述されている何かのオプションにスペースが足りなかったようです。</p>\n<p><a lang=\"cairo-bugs\" href=\"http://lists.cairographics.org/archives/cairo-bugs/2008-November/002790.html\">[Bug 18623] New: Patch for Ruby gem cairo-1.8. 0 to build on Mac OS X Leopard</a></p>\n<p>以下のようにパッチを当ててからビルドすると、無事成功しました。</p>\n<pre class=\"prettyprint\">cd cairo-1.8.0\nsudo patch -p0 &lt; 20081118-fix_rcairo_build_on_mac_leopard.patch\nsudo ruby extconf.rb\nsudo make\nsudo make install\n</pre>"},{"layout":"post","title":"今週届いた本（Joel on Software、高度試験午前対策など）","published":true,"date":"2009-10-11 15:49","comments":true,"tags":null,"categories":[],"url":"/blog/2009/10/11/this-weeks-chipped-books/","content":"<h3>エッセー</h3>\n<p>プログラマによるエッセー的な本を三冊。どれも有名な本ですね。</p>\n<ul>\n\t<li><a href=\"http://amazon.co.jp/o/ASIN/4274066304/nanataisan-22\">Joel on Software</a></li>\n\t<li><a href=\"http://amazon.co.jp/o/ASIN/4274065979/nanataisan-22\">ハッカーと画家 コンピュータ時代の創造者たち</a></li>\n\t<li><a href=\"http://amazon.co.jp/o/ASIN/4894712741/nanataisan-22\">達人プログラマー—システム開発の職人から名匠への道</a></li>\n</ul>\n<p>技術書を適当に買うと、すぐに使わない分野のものが積読になってしまいがちです。<br />\nエッセー的なものはどんどん読めて良いかな、と思って購入してみました。<br />\nちょこちょこ読んで行こうと思います。</p>\n<h3><a href=\"http://amazon.co.jp/o/ASIN/4798021253/nanataisan-22\">ポケットスタディ 高度試験共通 午前1・2対応</a></h3>\n<p>午前対策の他の本が品薄状態だったのと、レビューの評価が高かったので注文してみました。<br />\nしかし、結論からいうとイマイチです。問題にヒントが書いてある形式もどうかと思いますが、「ポケット」なせいかボリュームが少なすぎます。<br />\nまず、出題範囲。各分野ごとに数問しかなく、カバーできなかったキーワードは列挙されているだけです。そして解答の解説が十分ではありません。<br />\n試験当日の朝にチェック目的で利用するには良いかもしれませんが、これだけでは勉強ができない本ですね。</p>"},{"layout":"post","title":"Python Challenge Lv. 6 - 7","published":true,"date":"2009-10-11 02:33","comments":true,"tags":null,"categories":[],"url":"/blog/2009/10/11/python-challenge-from-6-to-7/","content":"<p>システムアーキテクトの試験が来週末に迫っているのですが、またまたやってしまいました。現実逃避。<br />\n試験前ということを除けば、面白いし、自然と勉強になるので良いのですけどね。</p>\n<h3>Level 6</h3>\n<p>アドレスバーに何度も channel.zip と入れるも、ファイルがダウンロードされていることになかなか気付かず。気付いてファイルを解凍し、Level 4 的なプログラムで &#8220;Collect the comments.&#8221; に辿りつきましたが、意味がわかりません。<br />\n少しカンニングしてみると、<span class=\"caps\">ZIP</span> ファイルは中身のファイル毎にコメントを付けられるのだとか。Python の zipfile モジュールで見られるらしいので、やってみました。</p>\n<pre class=\"prettyprint\">num = \"90052\"\nz = zipfile.ZipFile(\"channel.zip\")\n\nwhile True:\n  # Print file's comment\n  print z.getinfo(num + \".txt\").comment,\n  # Get next nothing\n  s = open(num + \".txt\").read()\n  m = pattern.match(s)\n  if m:\n    num = m.group(1)\n  else:\n    break</pre>\n<p>Python で改行なしの出力をするには <code>print \"foo\",</code> なんですね。<br />\nいつのまにか Python で解いてしまってますね・・・。</p>\n<h3>Level 7</h3>\n<pre class=\"prettyprint\">from PIL import Image\nimage = Image.open(\"oxygen.png\")\nwidth = image.size[0]\ndata = list(image.getdata())\n\nbefore = 0\nmessage = \"\"\nfor x in range(width):\n  tmp = data[x + width * 46][0]\n  if tmp != before:\n    message += \"%c\" % (tmp)\n    before= tmp\n\nprint message</pre>\n<p>これで下記メッセージが表示されるのですが、この配列の意味がわかりません・・・。</p>\n<blockquote>\n<p>smart guy, you made it. the next level is [105, 10, 16, 101, 103, 14, 105, 16, 121]ljljlimkljhdfdcdfa]_a</p>\n</blockquote>\n<p>少しカンニングをして気がついたのですが、 <code>if tmp != before:</code> としているのがマズかったようです。これだと同じ文字が続く場合に無視されてしまいます。<br />\n気を取り直して以下。書き方も少し Python らしく（？）。<br />\n<code>chr</code> という関数があったんですね。</p>\n<pre class=\"prettyprint\">from PIL import Image\nimage = Image.open(\"oxygen.png\")\nwidth = image.size[0]\ndata = list(image.getdata())\nmessage = []\ni = 0\nwhile True:\n  color = data[i + width * 46]\n  if color[0] == color[1] == color[2]:\n    message.append(color[2])\n    i += 7\n  else:\n    break\n\nprint \"\".join(map(chr, message))</pre>\n<p>出てきたメッセージから答えを出します。</p>\n<pre class=\"prettyprint\">print \"\".join(map(chr, [105, 110, 116, 101, 103, 114, 105, 116, 121]))</pre>\n<p>何だかカンニングしてばかりですね・・・。</p>"}],"prevPage":"/blog/pages/22/","title":"Page 23 - Shuhei Kagawa","nextPage":"/blog/pages/24/"}