{"site":{"title":"Shuhei Kagawa","author":"Shuhei Kagawa","perPage":3,"newPageExtension":"markdown","blogDir":"blog","sourceDir":"source","layoutDir":"_layouts","postDir":"_posts","cssFiles":["node_modules/highlight.js/styles/monokai-sublime.css","source/_css/style.css"]},"posts":[{"layout":"post","title":"最近の社内勉強会での発表（WebSockets テザリング、Backbone.js、JavaScript のテスト）","date":"2013-10-27 16:44","comments":true,"categories":["JavaScript","Backbone"],"url":"/blog/2013/10/27/tech-talks/","content":"<p>大変ひさびさの更新。ここ一年の間で、会社も変わったりいろいろありました。</p>\n<p>最近社内勉強会で発表したスライドを溜め込んでたので、この辺で吐き出しておきます。</p>\n<ul>\n<li>6/7 <a href=\"https://speakerdeck.com/shuhei/node-dot-js-plus-websocket-detezaringusitemita\">Node.js と WebSockets でテザリング</a></li>\n<li>8/16 <a href=\"/talks/20130816_Introduction_to_Backbone/\">Backbone.js のはなし</a></li>\n<li>10/25 <a href=\"/talks/20131025_Testing_JavaScript/\">Testing JavaScript</a></li>\n</ul>\n<p>どれも JavaScript ネタ。仕事の半分くらいは Ruby を書いているのですが・・・。</p>\n<p>一個目のは、外に置いてあるサーバとローカルのクライアント（両方 Node.js）を iPhone の Safari を介して WebSockets でつないでインターネットする、というやつです。Softbank がテザリングを始める前に着手して、ちょこちょこ作ってる間にサービスが始まってしまい、モチベーションが大いに削がれたといういわくつき。</p>\n<p>二個名、三個目のはタイトルそのままの内容です。どちらも markdown から HTML+JS のプレゼンを生成しています。コードを載せやすくて良いのですが、字が小さくて見にくいと不評。画像も貼りにくいし、次回からは Keynote で作ろうかなあ。</p>\n"},{"layout":"post","title":"3D LUT","published":true,"date":"2012-06-01 21:22","comments":true,"tags":null,"categories":["openFrameworks"],"url":"/blog/2012/06/01/3d-lut/","content":"<p>openFrameworks 0071 がリリースされました。今回のリリースの目玉の一つは <code>examples</code> が充実していることです。ディレクトリ構成上も <code>apps</code> から独立して一つ上の階層に上がりました。フォントのベクター情報いじったり、Instagram のエフェクト再現したりしてて面白い。</p>\n<p>Instagram 風の例を見てみると、エフェクトをかけるのには <a href=\"http://en.wikipedia.org/wiki/3D_LUT\">3D LUT</a> という仕組みが使われているようです。.cube ファイルという、この RGB 値ならこの RGB 値にする、というのを単純に羅列したものでエフェクトを定義しています。このファイル形式は After Effects とかで作れるみたいです。</p>\n<p><a href=\"http://ae-users.com/jp/tips/2010/04/whats-new-after-effects-cs5/\">After Effects CS5 ファーストレビュー！CS5では何が変わる？</a></p>\n"},{"layout":"post","title":"普通のウェブサイト制作に CoffeeScript と SCSS を使ってみて","published":true,"date":"2012-04-07 13:30","comments":true,"tags":null,"categories":[],"url":"/blog/2012/04/07/coffeescript-and-scss-for-vanilla-website/","content":"<p>最近バックエンドなしの普通の Web サイトを作るのに、ためしに CoffeeScript と SCSS を使ってみています。Ruby の <a href=\"https://github.com/mynyml/watchr\">watchr</a> を使って、ファイルを更新したら自動でコンパイルするように設定。</p>\n<pre><code class=\"hljs rb\">watch(<span class=\"hljs-string\">'(.*)\\.coffee'</span>) { <span class=\"hljs-params\">|md|</span> system <span class=\"hljs-string\">\"coffee -o js -c <span class=\"hljs-subst\">#{md[<span class=\"hljs-number\">0</span>]}</span>\"</span> }\nwatch(<span class=\"hljs-string\">'sass\\/(.*)\\.s[ac]ss'</span>) { <span class=\"hljs-params\">|md|</span> system <span class=\"hljs-string\">\"compass compile <span class=\"hljs-subst\">#{md[<span class=\"hljs-number\">0</span>]}</span>\"</span> }</code></pre><p>今のところ、SCSS と Compass はとても良いけど、CoffeeScript は jQuery との相性がいまいちという感想。jQuery のメソッドチェーンを書こうとすると、CoffeeScript でも関数実行の括弧が必要で JS とあまり変わらない。jQuery でちょこちょこエフェクトとかをつけるだけだと、あまりメリットがないかも。Backbone.js とかを使ってクラススタイルでごりごり書くのには良さそうなので、今度試してみたいなーと思います。</p>\n"}],"prevPage":"/blog/pages/9/","title":"Page 10 - Shuhei Kagawa","nextPage":"/blog/pages/11/"}