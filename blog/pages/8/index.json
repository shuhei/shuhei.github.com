{"site":{"title":"Shuhei Kagawa","author":"Shuhei Kagawa","perPage":3,"newPageExtension":"markdown","blogDir":"blog","sourceDir":"source","layoutDir":"_layouts","postDir":"_posts","cssFiles":["node_modules/highlight.js/styles/monokai-sublime.css","source/_css/style.css"]},"posts":[{"layout":"post","title":"karma-6to5-preprocessor","date":"2014-11-13 23:35","comments":true,"categories":["JavaScript","Karma","EcmaScript6"],"url":"/blog/2014/11/13/karma--to--preprocessor/","content":"<p>最近 <a href=\"https://github.com/6to5/6to5\">6to5</a> を使って ES6 を書いています。ES6 を使うには Traceur Compiler なんかもありますが、クライアント側に結構重い runtime を入れる必要があって気が進みません。そこで runtime のいらない 6to5。</p>\n<p>今作っているのは Angular アプリなので、テストは Karma。6to5 の Preprocessor が必要です。当然あるだろうと思って検索したのですが、ない。なかったので作りました。</p>\n<p><a href=\"https://www.npmjs.org/package/karma-6to5-preprocessor\">karma-6to5-preprocessor</a></p>\n<p>ES6 で書いたスクリプトを Karma でテストすることができるようになります。Sourcemap を含めた設定例は README を見てみてください。</p>\n<p>その後、ES6 Module も使うことにして、Browerify の transform として 6to5 と同じ作者が作っている <a href=\"https://github.com/6to5/6to5-browserify\">6to5-browserify</a> を使うようにしました。すると Karma の方でも Browerify を使えばいいので karma-6to5-preprocessor は使う必要がなくなってしまったのです。結構需要がありそうなのに、何でなかったんだろうと思っていたのですが、これで謎がとけました。</p>\n<p>それでも、ES6 Modules は使わないけど ES6 の便利な機能は使いたいという人はいるようで、ちょこちょこダウンロードされています。良かった良かった。</p>\n"},{"layout":"post","title":"WebGL な日本の地価マップをタッチ対応してみた","date":"2014-09-27 16:53","comments":true,"categories":["WebGL","JavaScript"],"url":"/blog/2014/09/27/land-prices-on-ios/","content":"<p>iOS 8 の Safari で WebGL が動くようになったので、以前作った日本の地価の 3D で表示するやつをタッチ対応してみました。</p>\n<p><img src=\"/images/webland-ios.png\" alt=\"Land Prices in Japan on iOS 8 Safari\"></p>\n<p><a href=\"/webland\">Land Prices in Japan</a></p>\n<p>ソースは <a href=\"https://github.com/shuhei/webland\">GitHub にあります</a>。</p>\n<p>タッチ対応というのは、大体以下のような感じです。</p>\n<ul>\n<li>Viewport が動かないように調整。</li>\n<li>ドラッグで上下左右に動けるように。タッチデバイスかどうがで、タッチ系のイベントを使うかマウス系のイベントを使うかを切り替えています。</li>\n<li>ピンチでズームできるように。難しいかなと思ったんですが、<code>gesturestart</code>, <code>gesturechange</code>, <code>gestureend</code> イベントがあったので簡単でした。</li>\n<li>ダブルタップで視点を切り替えられるように。ダブルタップやダブルクリックのイベントというのは特にないので、<code>touchstart</code> の時に一個前のイベントの時刻と比較して判断しています。</li>\n</ul>\n<p>早速買い換えた iPhone 6 Plus でぬるぬる動く上に、iPhone 5 でも余裕で動きます。直接触れるので、画面は小さいものの PC より楽しいなあと思いました。今後はモバイルでの WebGL が面白そうですね。</p>\n"},{"layout":"post","title":"Grunt と ES6 Modules","date":"2014-08-23 01:21","comments":true,"categories":["JavaScript"],"url":"/blog/2014/08/23/grunt-and-es6-modules/","content":"<p>大分間が空きましたが、社内勉強会で Grunt と ES6 Modules について発表したので、このへんで書いておきます。</p>\n<h2 id=\"-introduction-to-grunt-https-speakerdeck-com-shuhei-introduction-to-grunt-\"><a href=\"https://speakerdeck.com/shuhei/introduction-to-grunt\">Introduction to Grunt</a></h2>\n<p>こっちは、デザイナー向けに Grunt を紹介したときの資料。これまでよくわからず使っていた Grunt の設定ファイルについてちゃんと調べました。Qiita の<a href=\"http://qiita.com/shuhei/items/1156a795903b55d6b0d7\">Grunt の設定オブジェクトの秘密</a> にも詳しく書いてます。やっとわかったマルチタスク。</p>\n<p>しかし、勉強会では結局何ができるか、どう運用するかの話が中心で、設定ファイルの話はしませんでした。初めての人には、細かいことよりも、まずは何ができるかですよね。良い経験になりました。</p>\n<script async class=\"speakerdeck-embed\" data-id=\"39e78f00fade0131d88d6a0d18b48761\" data-ratio=\"1.33333333333333\" src=\"//speakerdeck.com/assets/embed.js\"></script>\n\n<h2 id=\"-start-es6-today-https-speakerdeck-com-shuhei-start-es6-modules-today-\"><a href=\"https://speakerdeck.com/shuhei/start-es6-modules-today\">Start ES6 Today</a></h2>\n<p>こっちは、あまりちゃんと調べられてなくて中途半端です。</p>\n<p>結論としては、ES6 Modules はまだ早い。<a href=\"https://github.com/systemjs/systemjs\">System.js</a> とか使えば今でも使えそうだけど、それなら Browerify でいいかなというのが今の気分です。むしろ、class とか ES6 の他の文法を使いたい。Traceur Compiler や <code>jsx --harmony</code> でコンパイルできる AltJS と考えれば。</p>\n<script async class=\"speakerdeck-embed\" data-id=\"b07645a0fadf0131d88c6a0d18b48761\" data-ratio=\"1.33333333333333\" src=\"//speakerdeck.com/assets/embed.js\"></script>\n"}],"prevPage":"/blog/pages/7/","title":"Page 8 - Shuhei Kagawa","nextPage":"/blog/pages/9/"}