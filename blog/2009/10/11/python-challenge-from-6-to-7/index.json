{"site":{"title":"Shuhei Kagawa","author":"Shuhei Kagawa","perPage":3,"newPageExtension":"markdown","blogDir":"blog","sourceDir":"source","layoutDir":"_layouts","postDir":"_posts","cssFiles":["node_modules/highlight.js/styles/monokai-sublime.css","source/_css/style.css"]},"post":{"layout":"post","title":"Python Challenge Lv. 6 - 7","published":true,"date":"2009-10-11 02:33","comments":true,"tags":null,"categories":[],"url":"/blog/2009/10/11/python-challenge-from-6-to-7/","content":"<p>システムアーキテクトの試験が来週末に迫っているのですが、またまたやってしまいました。現実逃避。<br />\n試験前ということを除けば、面白いし、自然と勉強になるので良いのですけどね。</p>\n<h3>Level 6</h3>\n<p>アドレスバーに何度も channel.zip と入れるも、ファイルがダウンロードされていることになかなか気付かず。気付いてファイルを解凍し、Level 4 的なプログラムで &#8220;Collect the comments.&#8221; に辿りつきましたが、意味がわかりません。<br />\n少しカンニングしてみると、<span class=\"caps\">ZIP</span> ファイルは中身のファイル毎にコメントを付けられるのだとか。Python の zipfile モジュールで見られるらしいので、やってみました。</p>\n<pre class=\"prettyprint\">num = \"90052\"\nz = zipfile.ZipFile(\"channel.zip\")\n\nwhile True:\n  # Print file's comment\n  print z.getinfo(num + \".txt\").comment,\n  # Get next nothing\n  s = open(num + \".txt\").read()\n  m = pattern.match(s)\n  if m:\n    num = m.group(1)\n  else:\n    break</pre>\n<p>Python で改行なしの出力をするには <code>print \"foo\",</code> なんですね。<br />\nいつのまにか Python で解いてしまってますね・・・。</p>\n<h3>Level 7</h3>\n<pre class=\"prettyprint\">from PIL import Image\nimage = Image.open(\"oxygen.png\")\nwidth = image.size[0]\ndata = list(image.getdata())\n\nbefore = 0\nmessage = \"\"\nfor x in range(width):\n  tmp = data[x + width * 46][0]\n  if tmp != before:\n    message += \"%c\" % (tmp)\n    before= tmp\n\nprint message</pre>\n<p>これで下記メッセージが表示されるのですが、この配列の意味がわかりません・・・。</p>\n<blockquote>\n<p>smart guy, you made it. the next level is [105, 10, 16, 101, 103, 14, 105, 16, 121]ljljlimkljhdfdcdfa]_a</p>\n</blockquote>\n<p>少しカンニングをして気がついたのですが、 <code>if tmp != before:</code> としているのがマズかったようです。これだと同じ文字が続く場合に無視されてしまいます。<br />\n気を取り直して以下。書き方も少し Python らしく（？）。<br />\n<code>chr</code> という関数があったんですね。</p>\n<pre class=\"prettyprint\">from PIL import Image\nimage = Image.open(\"oxygen.png\")\nwidth = image.size[0]\ndata = list(image.getdata())\nmessage = []\ni = 0\nwhile True:\n  color = data[i + width * 46]\n  if color[0] == color[1] == color[2]:\n    message.append(color[2])\n    i += 7\n  else:\n    break\n\nprint \"\".join(map(chr, message))</pre>\n<p>出てきたメッセージから答えを出します。</p>\n<pre class=\"prettyprint\">print \"\".join(map(chr, [105, 110, 116, 101, 103, 114, 105, 116, 121]))</pre>\n<p>何だかカンニングしてばかりですね・・・。</p>"}}