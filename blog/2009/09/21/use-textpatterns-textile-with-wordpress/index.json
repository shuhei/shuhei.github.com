{"site":{"title":"Shuhei Kagawa","author":"Shuhei Kagawa","perPage":3,"newPageExtension":"markdown","blogDir":"blog","sourceDir":"source","layoutDir":"_layouts","postDir":"_posts"},"post":{"layout":"post","title":"Wordpress で Textpattern 相当の Textile を使う","published":true,"date":"2009-09-21 00:37","comments":true,"tags":null,"categories":["Wordpress"],"url":"/blog/2009/09/21/use-textpatterns-textile-with-wordpress/","content":"<p>以前 <a href=\"/blog/2009/08/02/wordpress-textile-plugin/\">Wordpress の Textile プラグイン</a> という記事で、Wordpress の Textile 対応について書きました。この時は満足の行く結果が得られませんでしたが、今回ついにまともに Textile 2 が使えるようにできました。</p>\n<p>きっかけは、いくつかの簡易記法を選んで使えるというプラグイン <a href=\"http://wordpress.org/extend/plugins/text-control-2/\">Text Control 2</a> をふと思い立ってインストールしてみたこと。<br />\nこのプラグインでも Textile 2 は文字化けするものの、Textile 1 は文字化けせず。つまり Textile 2 用のプラグラムに問題があるということです。<br />\nこれを実績のある Textpattern の Textile モジュールに置き換えてみると上手く行きました。</p>\n<h3>手順</h3>\n<h4>classTextile.php の入手</h4>\n<p>Textpattern から textpattern/lib/classTextile.php を wp-content/plugins/text-control-2/text-control/ に持ってきます。</p>\n<h4>textile2.php ではなく classTextile.php を使うように</h4>\n<p>wp-content/plugins/text-control-2/text-control.php の 185 行目あたりを</p>\n<pre class=\"prettyprint\">function tc_post_process($text, $do_text='', $do_char='') {\n  if($do_text == 'textile2') {\n\n    require_once('text-control/textile2.php');\n    $t = new Textile();\n    $text = $t-&gt;process($text);</pre>\n<p>から</p>\n<pre class=\"prettyprint\">function tc_post_process($text, $do_text='', $do_char='') {\n  if($do_text == 'textile2') {\n\n    require_once('text-control/classTextile.php');\n    $t = new Textile();\n    $text = $t-&gt;TextileThis($text);</pre>\n<p>へ変更します。</p>\n<h3>結果</h3>\n<p>以上で、Wordpress でも Textpattern 相当の Textile が使えるようになります。<br />\nGoogle Code Prettify も、これまではいちいち <span class=\"caps\">HTML</span> のタグで囲んでいたのが <code>pre(prettyprint)..</code> と書くだけで使えるようになりました。大変便利ですね。</p>"}}