{"site":{"title":"Shuhei Kagawa","author":"Shuhei Kagawa","perPage":3,"newPageExtension":"markdown","blogDir":"blog","sourceDir":"source","layoutDir":"_layouts","postDir":"_posts","cssFiles":["node_modules/highlight.js/styles/monokai-sublime.css","source/_css/style.css"]},"post":{"layout":"post","title":"Xcode で例外発生時のスタックトレースをデバッガに表示","published":true,"date":"2009-11-14 10:07","comments":true,"tags":null,"categories":[],"url":"/blog/2009/11/14/show-stacktrace-of-exception-on-xcode/","content":"<p>iPhone アプリの開発で例外が発生したとき、Xcode のコンソールにはスタックトレースのアドレス（？）が表示されるだけで、内容がわかりません。<br />\nObjective-C ランタイムの例外送出部分にブレークポイントを設定することで、例外発生時のスタックトレースやコード中のオブジェクトの値をデバッガで詳しく見ることができます。</p>\n<h3>方法</h3>\n<p>&#8220;実行&#8221; =&gt; &#8220;ブレークポイントを管理&#8221; =&gt; &#8220;シンボリックブレークポイントを追加&#8221; を実行します。</p>\n<p><img src=\"/images/2009/11/symbolic_break_point1.png\" alt=\"\" /></p>\n<p>出てきたダイアログに <code>objc_exception_throw</code> と入力。<br />\nこれで、例外が発生した時にブレークされ、デバッガで詳細を見る事ができるようになります。</p>\n<p><img src=\"/images/2009/11/debugger1.png\" alt=\"\" /></p>\n<p>デバッガなので、もちろんコード中のオブジェクトの値を見ることもできます。便利ですね。</p>\n<p>via <a href=\"http://www.markj.net/debugging-tip-objc_exception_throw-breakpoint/\">Debugging Tip – objc_exception_throw breakpoint | markjnet</a></p>\n<h3>シンボリックブレークポイント</h3>\n<p>通常のブレークポイントではソースコード中の行を指定しますが、シンボリックブレークポイントはシンボル単位で指定するブレークポイントです。<br />\nですので「あの関数が呼ばれたらブレーク」や「あのクラスのあのメソッドが呼ばれたらブレーク」ということができます。<br />\n今回の objc_exception_throw は Objective-C のランタイム中にある例外を送出する関数のようですね。</p>"}}